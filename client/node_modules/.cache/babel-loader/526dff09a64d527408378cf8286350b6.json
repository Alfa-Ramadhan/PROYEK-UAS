{"ast":null,"code":"import { TOGGLE_DIALOG, SELECT_SHOWTIMES, SELECT_ALL_SHOWTIMES, GET_SHOWTIMES, DELETE_SHOWTIME } from '../types';\nimport { setAlert } from './alert';\nexport const toggleDialog = () => ({\n  type: TOGGLE_DIALOG\n});\nexport const selectShowtime = showtime => ({\n  type: SELECT_SHOWTIMES,\n  payload: showtime\n});\nexport const selectAllShowtimes = () => ({\n  type: SELECT_ALL_SHOWTIMES\n});\nexport const getShowtimes = () => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/showtimes';\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const showtimes = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_SHOWTIMES,\n        payload: showtimes\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const addShowtime = showtime => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/showtimes/';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(showtime)\n    });\n    if (response.ok) {\n      dispatch(setAlert('Showtime Created', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Showtime Created'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Cinema have not been saved, try again.'\n    };\n  }\n};\nexport const updateShowtime = (showtime, id) => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/showtimes/' + id;\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(showtime)\n    });\n    if (response.ok) {\n      dispatch(setAlert('Showtime Created', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Showtime Created'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Cinema have not been saved, try again.'\n    };\n  }\n};\nexport const deleteShowtime = id => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/showtimes/' + id;\n    const response = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      dispatch({\n        type: DELETE_SHOWTIME,\n        payload: id\n      });\n      dispatch(setAlert('Showtime Deleted', 'success', 5000));\n      dispatch(getShowtimes());\n      return {\n        status: 'success',\n        message: 'Showtime Removed'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Showtime have not been deleted, try again.'\n    };\n  }\n};","map":{"version":3,"names":["TOGGLE_DIALOG","SELECT_SHOWTIMES","SELECT_ALL_SHOWTIMES","GET_SHOWTIMES","DELETE_SHOWTIME","setAlert","toggleDialog","type","selectShowtime","showtime","payload","selectAllShowtimes","getShowtimes","dispatch","token","localStorage","getItem","url","response","fetch","method","headers","Authorization","showtimes","json","ok","error","message","addShowtime","body","JSON","stringify","status","updateShowtime","id","deleteShowtime"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/store/actions/showtimes.js"],"sourcesContent":["import {\r\n  TOGGLE_DIALOG,\r\n  SELECT_SHOWTIMES,\r\n  SELECT_ALL_SHOWTIMES,\r\n  GET_SHOWTIMES,\r\n  DELETE_SHOWTIME\r\n} from '../types';\r\nimport { setAlert } from './alert';\r\n\r\nexport const toggleDialog = () => ({ type: TOGGLE_DIALOG });\r\n\r\nexport const selectShowtime = showtime => ({\r\n  type: SELECT_SHOWTIMES,\r\n  payload: showtime\r\n});\r\n\r\nexport const selectAllShowtimes = () => ({ type: SELECT_ALL_SHOWTIMES });\r\n\r\nexport const getShowtimes = () => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/showtimes';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    const showtimes = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_SHOWTIMES, payload: showtimes });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const addShowtime = showtime => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/showtimes/';\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(showtime)\r\n    });\r\n    if (response.ok) {\r\n      dispatch(setAlert('Showtime Created', 'success', 5000));\r\n      return { status: 'success', message: 'Showtime Created' };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Cinema have not been saved, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const updateShowtime = (showtime, id) => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/showtimes/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(showtime)\r\n    });\r\n    if (response.ok) {\r\n      dispatch(setAlert('Showtime Created', 'success', 5000));\r\n      return { status: 'success', message: 'Showtime Created' };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Cinema have not been saved, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const deleteShowtime = id => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/showtimes/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    if (response.ok) {\r\n      dispatch({ type: DELETE_SHOWTIME, payload: id });\r\n      dispatch(setAlert('Showtime Deleted', 'success', 5000));\r\n      dispatch(getShowtimes());\r\n      return { status: 'success', message: 'Showtime Removed' };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Showtime have not been deleted, try again.'\r\n    };\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}