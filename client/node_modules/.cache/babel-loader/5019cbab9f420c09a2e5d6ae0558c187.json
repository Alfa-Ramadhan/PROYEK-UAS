{"ast":null,"code":"import { GET_RESERVATIONS, GET_RESERVATION_SUGGESTED_SEATS } from '../types';\nimport { setAlert } from './alert';\nexport const getReservations = () => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/reservations';\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const reservations = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_RESERVATIONS,\n        payload: reservations\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const getSuggestedReservationSeats = username => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/reservations/usermodeling/' + username;\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const reservationSeats = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_RESERVATION_SUGGESTED_SEATS,\n        payload: reservationSeats\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const addReservation = reservation => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/reservations';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reservation)\n    });\n    if (response.ok) {\n      const {\n        reservation,\n        QRCode\n      } = await response.json();\n      dispatch(setAlert('Reservation Created', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Reservation Created',\n        data: {\n          reservation,\n          QRCode\n        }\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Reservation have not been created, try again.'\n    };\n  }\n};\nexport const updateReservation = (reservation, id) => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/reservations/' + id;\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reservation)\n    });\n    if (response.ok) {\n      dispatch(setAlert('Reservation Updated', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Reservation Updated'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Reservation have not been updated, try again.'\n    };\n  }\n};\nexport const removeReservation = id => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/reservations/' + id;\n    const response = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      dispatch(setAlert('Reservation Deleted', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Reservation Removed'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Reservation have not been deleted, try again.'\n    };\n  }\n};","map":{"version":3,"names":["GET_RESERVATIONS","GET_RESERVATION_SUGGESTED_SEATS","setAlert","getReservations","dispatch","token","localStorage","getItem","url","response","fetch","method","headers","Authorization","reservations","json","ok","type","payload","error","message","getSuggestedReservationSeats","username","reservationSeats","addReservation","reservation","body","JSON","stringify","QRCode","status","data","updateReservation","id","removeReservation"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/store/actions/reservations.js"],"sourcesContent":["import { GET_RESERVATIONS, GET_RESERVATION_SUGGESTED_SEATS } from '../types';\r\nimport { setAlert } from './alert';\r\n\r\nexport const getReservations = () => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/reservations';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    const reservations = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_RESERVATIONS, payload: reservations });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const getSuggestedReservationSeats = username => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/reservations/usermodeling/' + username;\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    const reservationSeats = await response.json();\r\n    if (response.ok) {\r\n      dispatch({\r\n        type: GET_RESERVATION_SUGGESTED_SEATS,\r\n        payload: reservationSeats\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const addReservation = reservation => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/reservations';\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(reservation)\r\n    });\r\n    if (response.ok) {\r\n      const { reservation, QRCode } = await response.json();\r\n      dispatch(setAlert('Reservation Created', 'success', 5000));\r\n      return {\r\n        status: 'success',\r\n        message: 'Reservation Created',\r\n        data: { reservation, QRCode }\r\n      };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Reservation have not been created, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const updateReservation = (reservation, id) => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/reservations/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(reservation)\r\n    });\r\n    if (response.ok) {\r\n      dispatch(setAlert('Reservation Updated', 'success', 5000));\r\n      return { status: 'success', message: 'Reservation Updated' };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Reservation have not been updated, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const removeReservation = id => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/reservations/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    if (response.ok) {\r\n      dispatch(setAlert('Reservation Deleted', 'success', 5000));\r\n      return { status: 'success', message: 'Reservation Removed' };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Reservation have not been deleted, try again.'\r\n    };\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}