{"ast":null,"code":"import { GET_CINEMAS, GET_CINEMA } from '../types';\nimport { setAlert } from './alert';\nexport const uploadCinemaImage = (id, image) => async dispatch => {\n  try {\n    const data = new FormData();\n    data.append('file', image);\n    const url = '/cinemas/photo/' + id;\n    const response = await fetch(url, {\n      method: 'POST',\n      body: data\n    });\n    const responseData = await response.json();\n    if (response.ok) {\n      dispatch(setAlert('Image Uploaded', 'success', 5000));\n    }\n    if (responseData.error) {\n      dispatch(setAlert(responseData.error.message, 'error', 5000));\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const getCinemas = () => async dispatch => {\n  try {\n    const url = '/cinemas';\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const cinemas = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_CINEMAS,\n        payload: cinemas\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const getCinema = id => async dispatch => {\n  try {\n    const url = '/cinemas/' + id;\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const cinema = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_CINEMA,\n        payload: cinema\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const createCinemas = (image, newCinema) => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/cinemas';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCinema)\n    });\n    const cinema = await response.json();\n    if (response.ok) {\n      dispatch(setAlert('Cinema Created', 'success', 5000));\n      if (image) dispatch(uploadCinemaImage(cinema._id, image));\n      dispatch(getCinemas());\n      return {\n        status: 'success',\n        message: 'Cinema Created'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Cinema have not been saved, try again.'\n    };\n  }\n};\nexport const updateCinemas = (image, cinema, id) => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/cinemas/' + id;\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cinema)\n    });\n    if (response.ok) {\n      dispatch(setAlert('Cinema Updated', 'success', 5000));\n      if (image) dispatch(uploadCinemaImage(id, image));\n      return {\n        status: 'success',\n        message: 'Cinema Updated'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Cinema have not been updated, try again.'\n    };\n  }\n};\nexport const removeCinemas = id => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/cinemas/' + id;\n    const response = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      dispatch(setAlert('Cinema Deleted', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Cinema Removed'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' Cinema have not been deleted, try again.'\n    };\n  }\n};\nexport const getCinemasUserModeling = username => async dispatch => {\n  try {\n    const url = '/cinemas/usermodeling/' + username;\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const cinemas = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_CINEMAS,\n        payload: cinemas\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};","map":{"version":3,"names":["GET_CINEMAS","GET_CINEMA","setAlert","uploadCinemaImage","id","image","dispatch","data","FormData","append","url","response","fetch","method","body","responseData","json","ok","error","message","getCinemas","headers","cinemas","type","payload","getCinema","cinema","createCinemas","newCinema","token","localStorage","getItem","Authorization","JSON","stringify","_id","status","updateCinemas","removeCinemas","getCinemasUserModeling","username"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/store/actions/cinemas.js"],"sourcesContent":["import { GET_CINEMAS, GET_CINEMA } from '../types';\r\nimport { setAlert } from './alert';\r\n\r\nexport const uploadCinemaImage = (id, image) => async dispatch => {\r\n  try {\r\n    const data = new FormData();\r\n    data.append('file', image);\r\n    const url = '/cinemas/photo/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      body: data\r\n    });\r\n    const responseData = await response.json();\r\n    if (response.ok) {\r\n      dispatch(setAlert('Image Uploaded', 'success', 5000));\r\n    }\r\n    if (responseData.error) {\r\n      dispatch(setAlert(responseData.error.message, 'error', 5000));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const getCinemas = () => async dispatch => {\r\n  try {\r\n    const url = '/cinemas';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const cinemas = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_CINEMAS, payload: cinemas });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const getCinema = id => async dispatch => {\r\n  try {\r\n    const url = '/cinemas/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const cinema = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_CINEMA, payload: cinema });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const createCinemas = (image, newCinema) => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/cinemas';\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newCinema)\r\n    });\r\n    const cinema = await response.json();\r\n    if (response.ok) {\r\n      dispatch(setAlert('Cinema Created', 'success', 5000));\r\n      if (image) dispatch(uploadCinemaImage(cinema._id, image));\r\n      dispatch(getCinemas());\r\n      return { status: 'success', message: 'Cinema Created' };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Cinema have not been saved, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const updateCinemas = (image, cinema, id) => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/cinemas/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(cinema)\r\n    });\r\n    if (response.ok) {\r\n      dispatch(setAlert('Cinema Updated', 'success', 5000));\r\n      if (image) dispatch(uploadCinemaImage(id, image));\r\n      return { status: 'success', message: 'Cinema Updated' };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Cinema have not been updated, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const removeCinemas = id => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/cinemas/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    if (response.ok) {\r\n      dispatch(setAlert('Cinema Deleted', 'success', 5000));\r\n      return { status: 'success', message: 'Cinema Removed' };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' Cinema have not been deleted, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const getCinemasUserModeling = username => async dispatch => {\r\n  try {\r\n    const url = '/cinemas/usermodeling/' + username;\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const cinemas = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_CINEMAS, payload: cinemas });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}