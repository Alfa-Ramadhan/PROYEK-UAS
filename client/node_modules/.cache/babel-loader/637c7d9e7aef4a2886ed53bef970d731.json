{"ast":null,"code":"import { GET_USERS, ADD_USER, UPDATE_USER, DELETE_USER, TOGGLE_USER_DIALOG, SELECT_USER, SELECT_ALL_USERS } from '../types';\nimport { setAlert } from './alert';\nexport const toggleUserDialog = () => ({\n  type: TOGGLE_USER_DIALOG\n});\nexport const selectUser = user => ({\n  type: SELECT_USER,\n  payload: user\n});\nexport const selectAllUsers = () => ({\n  type: SELECT_ALL_USERS\n});\nexport const getUsers = () => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/users';\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const users = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_USERS,\n        payload: users\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const addUser = user => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/users/';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await response.json();\n    const newUser = data.user;\n    if (response.ok) {\n      dispatch(setAlert('User Created', 'success', 5000));\n      dispatch({\n        type: ADD_USER,\n        payload: newUser\n      });\n      return {\n        status: 'success',\n        message: 'User Created'\n      };\n    } else {\n      throw new Error(data._message);\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' User have not been saved, try again.'\n    };\n  }\n};\nexport const updateUser = (user, id) => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/users/' + id;\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await response.json();\n    const newUser = data.user;\n    if (response.ok) {\n      dispatch(setAlert('User Updated', 'success', 5000));\n      dispatch({\n        type: UPDATE_USER,\n        payload: newUser\n      });\n      return {\n        status: 'success',\n        message: 'User Updated'\n      };\n    } else {\n      throw new Error(data._message);\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' User have not been saved, try again.'\n    };\n  }\n};\nexport const deleteUser = id => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/users/' + id;\n    const response = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    if (response.ok) {\n      dispatch(setAlert('User Deleted', 'success', 5000));\n      dispatch({\n        type: DELETE_USER,\n        payload: id\n      });\n      return {\n        status: 'success',\n        message: 'User Removed'\n      };\n    } else {\n      throw new Error(data._message);\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n    return {\n      status: 'error',\n      message: ' User have not been deleted, try again.'\n    };\n  }\n};","map":{"version":3,"names":["GET_USERS","ADD_USER","UPDATE_USER","DELETE_USER","TOGGLE_USER_DIALOG","SELECT_USER","SELECT_ALL_USERS","setAlert","toggleUserDialog","type","selectUser","user","payload","selectAllUsers","getUsers","dispatch","token","localStorage","getItem","url","response","fetch","method","headers","Authorization","users","json","ok","error","message","addUser","body","JSON","stringify","data","newUser","status","Error","_message","updateUser","id","deleteUser"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/store/actions/users.js"],"sourcesContent":["import {\r\n  GET_USERS,\r\n  ADD_USER,\r\n  UPDATE_USER,\r\n  DELETE_USER,\r\n  TOGGLE_USER_DIALOG,\r\n  SELECT_USER,\r\n  SELECT_ALL_USERS\r\n} from '../types';\r\n\r\nimport { setAlert } from './alert';\r\n\r\nexport const toggleUserDialog = () => ({ type: TOGGLE_USER_DIALOG });\r\n\r\nexport const selectUser = user => ({\r\n  type: SELECT_USER,\r\n  payload: user\r\n});\r\n\r\nexport const selectAllUsers = () => ({ type: SELECT_ALL_USERS });\r\n\r\nexport const getUsers = () => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/users';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    const users = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_USERS, payload: users });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const addUser = user => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/users/';\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    });\r\n    const data = await response.json();\r\n    const newUser = data.user;\r\n    if (response.ok) {\r\n      dispatch(setAlert('User Created', 'success', 5000));\r\n      dispatch({ type: ADD_USER, payload: newUser });\r\n      return { status: 'success', message: 'User Created' };\r\n    } else {\r\n      throw new Error(data._message);\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' User have not been saved, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const updateUser = (user, id) => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/users/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    });\r\n    const data = await response.json();\r\n    const newUser = data.user;\r\n    if (response.ok) {\r\n      dispatch(setAlert('User Updated', 'success', 5000));\r\n      dispatch({ type: UPDATE_USER, payload: newUser });\r\n      return { status: 'success', message: 'User Updated' };\r\n    } else {\r\n      throw new Error(data._message);\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' User have not been saved, try again.'\r\n    };\r\n  }\r\n};\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/users/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch(setAlert('User Deleted', 'success', 5000));\r\n      dispatch({ type: DELETE_USER, payload: id });\r\n      return { status: 'success', message: 'User Removed' };\r\n    } else {\r\n      throw new Error(data._message);\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: ' User have not been deleted, try again.'\r\n    };\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}