{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TreeViewContext from './TreeViewContext';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n  return false;\n}\nvar defaultExpandedDefault = [];\nvar TreeView = React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n    classes = props.classes,\n    className = props.className,\n    defaultCollapseIcon = props.defaultCollapseIcon,\n    defaultEndIcon = props.defaultEndIcon,\n    _props$defaultExpande = props.defaultExpanded,\n    defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n    defaultExpandIcon = props.defaultExpandIcon,\n    defaultParentIcon = props.defaultParentIcon,\n    onNodeToggle = props.onNodeToggle,\n    other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"onNodeToggle\"]);\n  var _React$useState = React.useState(defaultExpanded),\n    expanded = _React$useState[0],\n    setExpanded = _React$useState[1];\n  var _React$useState2 = React.useState(null),\n    tabable = _React$useState2[0],\n    setTabable = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    focused = _React$useState3[0],\n    setFocused = _React$useState3[1];\n  var firstNode = React.useRef(null);\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var isExpanded = React.useCallback(function (id) {\n    return expanded.indexOf(id) !== -1;\n  }, [expanded]);\n  var isTabable = function isTabable(id) {\n    return tabable === id;\n  };\n  var isFocused = function isFocused(id) {\n    return focused === id;\n  };\n  var prevChildIds = React.useRef([]);\n  React.useEffect(function () {\n    var childIds = React.Children.map(children, function (child) {\n      return child.props.nodeId;\n    }) || [];\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          firstNode.current = id;\n          setTabable(id);\n        }\n        nodeMap.current[id] = {\n          parent: null\n        };\n      });\n      prevChildIds.current = childIds;\n    }\n  }, [children]);\n  var getLastNode = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    if (isExpanded(id) && map.children && map.children.length > 0) {\n      return getLastNode(map.children[map.children.length - 1]);\n    }\n    return id;\n  }, [isExpanded]);\n  var focus = function focus(id) {\n    if (id) {\n      setTabable(id);\n    }\n    setFocused(id);\n  };\n  var getNextNode = function getNextNode(id, end) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    if (!end) {\n      if (isExpanded(id)) {\n        return map.children[0];\n      }\n    }\n    if (parent) {\n      var nodeIndex = parent.children.indexOf(id);\n      var nextIndex = nodeIndex + 1;\n      if (parent.children.length > nextIndex) {\n        return parent.children[nextIndex];\n      }\n      return getNextNode(parent.id, true);\n    }\n    var topLevelNodes = nodeMap.current[-1].children;\n    var topLevelNodeIndex = topLevelNodes.indexOf(id);\n    if (topLevelNodeIndex !== -1 && topLevelNodeIndex !== topLevelNodes.length - 1) {\n      return topLevelNodes[topLevelNodeIndex + 1];\n    }\n    return null;\n  };\n  var getPreviousNode = function getPreviousNode(id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    if (parent) {\n      var nodeIndex = parent.children.indexOf(id);\n      if (nodeIndex !== 0) {\n        var nextIndex = nodeIndex - 1;\n        return getLastNode(parent.children[nextIndex]);\n      }\n      return parent.id;\n    }\n    var topLevelNodes = nodeMap.current[-1].children;\n    var topLevelNodeIndex = topLevelNodes.indexOf(id);\n    if (topLevelNodeIndex > 0) {\n      return getLastNode(topLevelNodes[topLevelNodeIndex - 1]);\n    }\n    return null;\n  };\n  var focusNextNode = function focusNextNode(id) {\n    var nextNode = getNextNode(id);\n    if (nextNode) {\n      focus(nextNode);\n    }\n  };\n  var focusPreviousNode = function focusPreviousNode(id) {\n    var previousNode = getPreviousNode(id);\n    if (previousNode) {\n      focus(previousNode);\n    }\n  };\n  var focusFirstNode = function focusFirstNode() {\n    if (firstNode.current) {\n      focus(firstNode.current);\n    }\n  };\n  var focusLastNode = function focusLastNode() {\n    var topLevelNodes = nodeMap.current[-1].children;\n    var lastNode = getLastNode(topLevelNodes[topLevelNodes.length - 1]);\n    focus(lastNode);\n  };\n  var toggle = function toggle() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : focused;\n    setExpanded(function (prevExpanded) {\n      var newExpanded;\n      if (prevExpanded.indexOf(value) !== -1) {\n        newExpanded = prevExpanded.filter(function (id) {\n          return id !== value;\n        });\n        setTabable(function (oldTabable) {\n          var map = nodeMap.current[oldTabable];\n          if (oldTabable && (map && map.parent ? map.parent.id : null) === value) {\n            return value;\n          }\n          return oldTabable;\n        });\n      } else {\n        newExpanded = [value].concat(_toConsumableArray(prevExpanded));\n      }\n      if (onNodeToggle) {\n        onNodeToggle(value, newExpanded.indexOf(value) !== -1);\n      }\n      return newExpanded;\n    });\n  };\n  var expandAllSiblings = function expandAllSiblings(id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n    setExpanded(function (oldExpanded) {\n      return [].concat(_toConsumableArray(oldExpanded), _toConsumableArray(diff));\n    });\n  };\n  var handleLeftArrow = function handleLeftArrow(id, event) {\n    var flag = false;\n    if (isExpanded(id)) {\n      toggle(id);\n      flag = true;\n    } else {\n      var parent = nodeMap.current[id].parent;\n      if (parent) {\n        focus(parent);\n        flag = true;\n      }\n    }\n    if (flag && event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n  var getIndexFirstChars = function getIndexFirstChars(firstChars, startIndex, char) {\n    for (var i = startIndex; i < firstChars.length; i += 1) {\n      if (char === firstChars[i]) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  var setFocusByFirstCharacter = function setFocusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.entries(firstCharMap.current).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        nodeId = _ref2[0],\n        firstChar = _ref2[1];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n    index = getIndexFirstChars(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = getIndexFirstChars(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n  var removeNodeFromNodeMap = function removeNodeFromNodeMap(id) {\n    var map = nodeMap.current[id];\n    if (map) {\n      if (map.parent) {\n        var parentMap = nodeMap.current[map.parent];\n        if (parentMap && parentMap.children) {\n          var parentChildren = parentMap.children.filter(function (c) {\n            return c !== id;\n          });\n          nodeMap.current[map.parent] = _extends({}, parentMap, {\n            children: parentChildren\n          });\n        }\n      }\n      delete nodeMap.current[id];\n    }\n  };\n  var handleFirstChars = function handleFirstChars(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n  return React.createElement(TreeViewContext.Provider, {\n    value: {\n      expandAllSiblings: expandAllSiblings,\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      handleFirstChars: handleFirstChars,\n      handleLeftArrow: handleLeftArrow,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap,\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isTabable: isTabable,\n      setFocusByFirstCharacter: setFocusByFirstCharacter,\n      toggle: toggle\n    }\n  }, React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n  /**\n   * Expanded node ids.\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n  /**\n   * Callback fired when a `TreeItem` is expanded/collapsed.\n   *\n   * @param {string} nodeId The id of the toggled node.\n   * @param {boolean} expanded The node status - If `true` the node was expanded. If `false` the node was collapsed.\n   */\n  onNodeToggle: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","map":{"version":3,"names":["_extends","_slicedToArray","_toConsumableArray","_objectWithoutProperties","React","clsx","PropTypes","TreeViewContext","withStyles","styles","root","padding","margin","listStyle","arrayDiff","arr1","arr2","length","i","defaultExpandedDefault","TreeView","forwardRef","props","ref","children","classes","className","defaultCollapseIcon","defaultEndIcon","_props$defaultExpande","defaultExpanded","defaultExpandIcon","defaultParentIcon","onNodeToggle","other","_React$useState","useState","expanded","setExpanded","_React$useState2","tabable","setTabable","_React$useState3","focused","setFocused","firstNode","useRef","nodeMap","firstCharMap","isExpanded","useCallback","id","indexOf","isTabable","isFocused","prevChildIds","useEffect","childIds","Children","map","child","nodeId","current","parent","forEach","index","getLastNode","focus","getNextNode","end","nodeIndex","nextIndex","topLevelNodes","topLevelNodeIndex","getPreviousNode","focusNextNode","nextNode","focusPreviousNode","previousNode","focusFirstNode","focusLastNode","lastNode","toggle","value","arguments","undefined","prevExpanded","newExpanded","filter","oldTabable","concat","expandAllSiblings","diff","node","oldExpanded","handleLeftArrow","event","flag","preventDefault","stopPropagation","getIndexFirstChars","firstChars","startIndex","char","setFocusByFirstCharacter","start","lowercaseChar","toLowerCase","firstCharIds","Object","entries","_ref","_ref2","firstChar","visible","push","addNodeToNodeMap","childrenIds","currentMap","childId","currentChildMap","removeNodeFromNodeMap","parentMap","parentChildren","c","handleFirstChars","createElement","Provider","icons","role","process","env","NODE_ENV","propTypes","object","string","arrayOf","func","name"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/node_modules/@material-ui/lab/esm/TreeView/TreeView.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TreeViewContext from './TreeViewContext';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar defaultExpandedDefault = [];\nvar TreeView = React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      onNodeToggle = props.onNodeToggle,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"onNodeToggle\"]);\n\n  var _React$useState = React.useState(defaultExpanded),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      tabable = _React$useState2[0],\n      setTabable = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var firstNode = React.useRef(null);\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var isExpanded = React.useCallback(function (id) {\n    return expanded.indexOf(id) !== -1;\n  }, [expanded]);\n\n  var isTabable = function isTabable(id) {\n    return tabable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focused === id;\n  };\n\n  var prevChildIds = React.useRef([]);\n  React.useEffect(function () {\n    var childIds = React.Children.map(children, function (child) {\n      return child.props.nodeId;\n    }) || [];\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          firstNode.current = id;\n          setTabable(id);\n        }\n\n        nodeMap.current[id] = {\n          parent: null\n        };\n      });\n      prevChildIds.current = childIds;\n    }\n  }, [children]);\n  var getLastNode = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n\n    if (isExpanded(id) && map.children && map.children.length > 0) {\n      return getLastNode(map.children[map.children.length - 1]);\n    }\n\n    return id;\n  }, [isExpanded]);\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabable(id);\n    }\n\n    setFocused(id);\n  };\n\n  var getNextNode = function getNextNode(id, end) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n\n    if (!end) {\n      if (isExpanded(id)) {\n        return map.children[0];\n      }\n    }\n\n    if (parent) {\n      var nodeIndex = parent.children.indexOf(id);\n      var nextIndex = nodeIndex + 1;\n\n      if (parent.children.length > nextIndex) {\n        return parent.children[nextIndex];\n      }\n\n      return getNextNode(parent.id, true);\n    }\n\n    var topLevelNodes = nodeMap.current[-1].children;\n    var topLevelNodeIndex = topLevelNodes.indexOf(id);\n\n    if (topLevelNodeIndex !== -1 && topLevelNodeIndex !== topLevelNodes.length - 1) {\n      return topLevelNodes[topLevelNodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n\n    if (parent) {\n      var nodeIndex = parent.children.indexOf(id);\n\n      if (nodeIndex !== 0) {\n        var nextIndex = nodeIndex - 1;\n        return getLastNode(parent.children[nextIndex]);\n      }\n\n      return parent.id;\n    }\n\n    var topLevelNodes = nodeMap.current[-1].children;\n    var topLevelNodeIndex = topLevelNodes.indexOf(id);\n\n    if (topLevelNodeIndex > 0) {\n      return getLastNode(topLevelNodes[topLevelNodeIndex - 1]);\n    }\n\n    return null;\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    var nextNode = getNextNode(id);\n\n    if (nextNode) {\n      focus(nextNode);\n    }\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    var previousNode = getPreviousNode(id);\n\n    if (previousNode) {\n      focus(previousNode);\n    }\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    if (firstNode.current) {\n      focus(firstNode.current);\n    }\n  };\n\n  var focusLastNode = function focusLastNode() {\n    var topLevelNodes = nodeMap.current[-1].children;\n    var lastNode = getLastNode(topLevelNodes[topLevelNodes.length - 1]);\n    focus(lastNode);\n  };\n\n  var toggle = function toggle() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : focused;\n    setExpanded(function (prevExpanded) {\n      var newExpanded;\n\n      if (prevExpanded.indexOf(value) !== -1) {\n        newExpanded = prevExpanded.filter(function (id) {\n          return id !== value;\n        });\n        setTabable(function (oldTabable) {\n          var map = nodeMap.current[oldTabable];\n\n          if (oldTabable && (map && map.parent ? map.parent.id : null) === value) {\n            return value;\n          }\n\n          return oldTabable;\n        });\n      } else {\n        newExpanded = [value].concat(_toConsumableArray(prevExpanded));\n      }\n\n      if (onNodeToggle) {\n        onNodeToggle(value, newExpanded.indexOf(value) !== -1);\n      }\n\n      return newExpanded;\n    });\n  };\n\n  var expandAllSiblings = function expandAllSiblings(id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    setExpanded(function (oldExpanded) {\n      return [].concat(_toConsumableArray(oldExpanded), _toConsumableArray(diff));\n    });\n  };\n\n  var handleLeftArrow = function handleLeftArrow(id, event) {\n    var flag = false;\n\n    if (isExpanded(id)) {\n      toggle(id);\n      flag = true;\n    } else {\n      var parent = nodeMap.current[id].parent;\n\n      if (parent) {\n        focus(parent);\n        flag = true;\n      }\n    }\n\n    if (flag && event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  var getIndexFirstChars = function getIndexFirstChars(firstChars, startIndex, char) {\n    for (var i = startIndex; i < firstChars.length; i += 1) {\n      if (char === firstChars[i]) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  var setFocusByFirstCharacter = function setFocusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.entries(firstCharMap.current).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          nodeId = _ref2[0],\n          firstChar = _ref2[1];\n\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = getIndexFirstChars(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = getIndexFirstChars(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var removeNodeFromNodeMap = function removeNodeFromNodeMap(id) {\n    var map = nodeMap.current[id];\n\n    if (map) {\n      if (map.parent) {\n        var parentMap = nodeMap.current[map.parent];\n\n        if (parentMap && parentMap.children) {\n          var parentChildren = parentMap.children.filter(function (c) {\n            return c !== id;\n          });\n          nodeMap.current[map.parent] = _extends({}, parentMap, {\n            children: parentChildren\n          });\n        }\n      }\n\n      delete nodeMap.current[id];\n    }\n  };\n\n  var handleFirstChars = function handleFirstChars(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  return React.createElement(TreeViewContext.Provider, {\n    value: {\n      expandAllSiblings: expandAllSiblings,\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      handleFirstChars: handleFirstChars,\n      handleLeftArrow: handleLeftArrow,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap,\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isTabable: isTabable,\n      setFocusByFirstCharacter: setFocusByFirstCharacter,\n      toggle: toggle\n    }\n  }, React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids.\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Callback fired when a `TreeItem` is expanded/collapsed.\n   *\n   * @param {string} nodeId The id of the toggled node.\n   * @param {boolean} expanded The node status - If `true` the node was expanded. If `false` the node was collapsed.\n   */\n  onNodeToggle: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}