{"ast":null,"code":"import { GET_MOVIES, SELECT_MOVIE, GET_SUGGESTIONS } from '../types';\nimport { setAlert } from './alert';\nexport const uploadMovieImage = (id, image) => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken'); // Tambahkan baris ini\n    const data = new FormData();\n    data.append('file', image);\n    const url = '/movies/photo/' + id;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}` // Tambahkan Authorization token\n      },\n      body: data\n    });\n    const responseData = await response.json();\n    if (response.ok) {\n      dispatch(setAlert('Image Uploaded', 'success', 5000));\n    }\n    if (responseData.error) {\n      dispatch(setAlert(responseData.error.message, 'error', 5000));\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const getMovies = () => async dispatch => {\n  try {\n    const url = '/movies';\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const movies = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_MOVIES,\n        payload: movies\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const onSelectMovie = movie => ({\n  type: SELECT_MOVIE,\n  payload: movie\n});\nexport const getMovie = id => async dispatch => {\n  try {\n    const url = '/movies/' + id;\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const movie = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: SELECT_MOVIE,\n        payload: movie\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const getMovieSuggestion = id => async dispatch => {\n  try {\n    const url = '/movies/usermodeling/' + id;\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const movies = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_SUGGESTIONS,\n        payload: movies\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const addMovie = (image, newMovie) => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/movies';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newMovie)\n    });\n    const movie = await response.json();\n    if (response.ok) {\n      dispatch(setAlert('Movie have been saved!', 'success', 5000));\n      if (image) dispatch(uploadMovieImage(movie._id, image));\n      dispatch(getMovies());\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const updateMovie = (movieId, movie, image) => async dispatch => {\n  console.log('in update movie', movieId, movie, image);\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/movies/' + movieId;\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(movie)\n    });\n    if (response.ok) {\n      dispatch(onSelectMovie(null));\n      dispatch(setAlert('Movie have been saved!', 'success', 5000));\n      console.log('about to call uploadimage');\n      if (image) dispatch(uploadMovieImage(movieId, image));\n      dispatch(getMovies());\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};\nexport const removeMovie = movieId => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/movies/' + movieId;\n    const response = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      dispatch(getMovies());\n      dispatch(onSelectMovie(null));\n      dispatch(setAlert('Movie have been Deleted!', 'success', 5000));\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message, 'error', 5000));\n  }\n};","map":{"version":3,"names":["GET_MOVIES","SELECT_MOVIE","GET_SUGGESTIONS","setAlert","uploadMovieImage","id","image","dispatch","token","localStorage","getItem","data","FormData","append","url","response","fetch","method","headers","Authorization","body","responseData","json","ok","error","message","getMovies","movies","type","payload","onSelectMovie","movie","getMovie","getMovieSuggestion","addMovie","newMovie","JSON","stringify","_id","updateMovie","movieId","console","log","removeMovie"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/store/actions/movies.js"],"sourcesContent":["import { GET_MOVIES, SELECT_MOVIE,GET_SUGGESTIONS } from '../types';\r\nimport { setAlert } from './alert';\r\n\r\nexport const uploadMovieImage = (id, image) => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken'); // Tambahkan baris ini\r\n    const data = new FormData();\r\n    data.append('file', image);\r\n    const url = '/movies/photo/' + id;\r\n\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}` // Tambahkan Authorization token\r\n      },\r\n      body: data\r\n    });\r\n\r\n    const responseData = await response.json();\r\n    if (response.ok) {\r\n      dispatch(setAlert('Image Uploaded', 'success', 5000));\r\n    }\r\n    if (responseData.error) {\r\n      dispatch(setAlert(responseData.error.message, 'error', 5000));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\n\r\nexport const getMovies = () => async dispatch => {\r\n  try {\r\n    const url = '/movies';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const movies = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_MOVIES, payload: movies });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const onSelectMovie = movie => ({\r\n  type: SELECT_MOVIE,\r\n  payload: movie\r\n});\r\n\r\nexport const getMovie = id => async dispatch => {\r\n  try {\r\n    const url = '/movies/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const movie = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: SELECT_MOVIE, payload: movie });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const getMovieSuggestion = id => async dispatch => {\r\n  try {\r\n    const url = '/movies/usermodeling/' + id;\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const movies = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_SUGGESTIONS, payload: movies });\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const addMovie = (image, newMovie) => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/movies';\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newMovie)\r\n    });\r\n    const movie = await response.json();\r\n    if (response.ok) {\r\n      dispatch(setAlert('Movie have been saved!', 'success', 5000));\r\n      if (image) dispatch(uploadMovieImage(movie._id, image));\r\n      dispatch(getMovies());\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const updateMovie = (movieId, movie, image) => async dispatch => {\r\n  console.log('in update movie',movieId, movie, image);\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/movies/' + movieId;\r\n    const response = await fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(movie)\r\n    });\r\n    if (response.ok) {\r\n      dispatch(onSelectMovie(null));\r\n      dispatch(setAlert('Movie have been saved!', 'success', 5000));\r\n      console.log('about to call uploadimage')\r\n      if (image) dispatch(uploadMovieImage(movieId, image));\r\n      dispatch(getMovies());\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n\r\nexport const removeMovie = movieId => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/movies/' + movieId;\r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    if (response.ok) {\r\n      dispatch(getMovies());\r\n      dispatch(onSelectMovie(null));\r\n      dispatch(setAlert('Movie have been Deleted!', 'success', 5000));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message, 'error', 5000));\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,YAAY,EAACC,eAAe,QAAQ,UAAU;AACnE,SAASC,QAAQ,QAAQ,SAAS;AAElC,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,KAAK,KAAK,MAAMC,QAAQ,IAAI;EAC/D,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IAChD,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEP,KAAK,CAAC;IAC1B,MAAMQ,GAAG,GAAG,gBAAgB,GAAGT,EAAE;IAEjC,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUX,KAAK,EAAE,CAAC;MACnC,CAAC;MACDY,IAAI,EAAET;IACR,CAAC,CAAC;IAEF,MAAMU,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1C,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfhB,QAAQ,CAACJ,QAAQ,CAAC,gBAAgB,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACvD;IACA,IAAIkB,YAAY,CAACG,KAAK,EAAE;MACtBjB,QAAQ,CAACJ,QAAQ,CAACkB,YAAY,CAACG,KAAK,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IAC/D;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdjB,QAAQ,CAACJ,QAAQ,CAACqB,KAAK,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;EAClD;AACF,CAAC;AAGD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAMnB,QAAQ,IAAI;EAC/C,IAAI;IACF,MAAMO,GAAG,GAAG,SAAS;IACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,MAAMS,MAAM,GAAG,MAAMZ,QAAQ,CAACO,IAAI,CAAC,CAAC;IACpC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfhB,QAAQ,CAAC;QAAEqB,IAAI,EAAE5B,UAAU;QAAE6B,OAAO,EAAEF;MAAO,CAAC,CAAC;IACjD;EACF,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdjB,QAAQ,CAACJ,QAAQ,CAACqB,KAAK,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMK,aAAa,GAAGC,KAAK,KAAK;EACrCH,IAAI,EAAE3B,YAAY;EAClB4B,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAG3B,EAAE,IAAI,MAAME,QAAQ,IAAI;EAC9C,IAAI;IACF,MAAMO,GAAG,GAAG,UAAU,GAAGT,EAAE;IAC3B,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,MAAMa,KAAK,GAAG,MAAMhB,QAAQ,CAACO,IAAI,CAAC,CAAC;IACnC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfhB,QAAQ,CAAC;QAAEqB,IAAI,EAAE3B,YAAY;QAAE4B,OAAO,EAAEE;MAAM,CAAC,CAAC;IAClD;EACF,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdjB,QAAQ,CAACJ,QAAQ,CAACqB,KAAK,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMQ,kBAAkB,GAAG5B,EAAE,IAAI,MAAME,QAAQ,IAAI;EACxD,IAAI;IACF,MAAMO,GAAG,GAAG,uBAAuB,GAAGT,EAAE;IACxC,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,MAAMS,MAAM,GAAG,MAAMZ,QAAQ,CAACO,IAAI,CAAC,CAAC;IACpC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfhB,QAAQ,CAAC;QAAEqB,IAAI,EAAE1B,eAAe;QAAE2B,OAAO,EAAEF;MAAO,CAAC,CAAC;IACtD;EACF,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdjB,QAAQ,CAACJ,QAAQ,CAACqB,KAAK,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMS,QAAQ,GAAGA,CAAC5B,KAAK,EAAE6B,QAAQ,KAAK,MAAM5B,QAAQ,IAAI;EAC7D,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,MAAMI,GAAG,GAAG,SAAS;IACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUX,KAAK,EAAE;QAChC,cAAc,EAAE;MAClB,CAAC;MACDY,IAAI,EAAEgB,IAAI,CAACC,SAAS,CAACF,QAAQ;IAC/B,CAAC,CAAC;IACF,MAAMJ,KAAK,GAAG,MAAMhB,QAAQ,CAACO,IAAI,CAAC,CAAC;IACnC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfhB,QAAQ,CAACJ,QAAQ,CAAC,wBAAwB,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;MAC7D,IAAIG,KAAK,EAAEC,QAAQ,CAACH,gBAAgB,CAAC2B,KAAK,CAACO,GAAG,EAAEhC,KAAK,CAAC,CAAC;MACvDC,QAAQ,CAACmB,SAAS,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdjB,QAAQ,CAACJ,QAAQ,CAACqB,KAAK,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMc,WAAW,GAAGA,CAACC,OAAO,EAAET,KAAK,EAAEzB,KAAK,KAAK,MAAMC,QAAQ,IAAI;EACtEkC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACF,OAAO,EAAET,KAAK,EAAEzB,KAAK,CAAC;EACpD,IAAI;IACF,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,MAAMI,GAAG,GAAG,UAAU,GAAG0B,OAAO;IAChC,MAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUX,KAAK,EAAE;QAChC,cAAc,EAAE;MAClB,CAAC;MACDY,IAAI,EAAEgB,IAAI,CAACC,SAAS,CAACN,KAAK;IAC5B,CAAC,CAAC;IACF,IAAIhB,QAAQ,CAACQ,EAAE,EAAE;MACfhB,QAAQ,CAACuB,aAAa,CAAC,IAAI,CAAC,CAAC;MAC7BvB,QAAQ,CAACJ,QAAQ,CAAC,wBAAwB,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;MAC7DsC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,IAAIpC,KAAK,EAAEC,QAAQ,CAACH,gBAAgB,CAACoC,OAAO,EAAElC,KAAK,CAAC,CAAC;MACrDC,QAAQ,CAACmB,SAAS,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdjB,QAAQ,CAACJ,QAAQ,CAACqB,KAAK,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMkB,WAAW,GAAGH,OAAO,IAAI,MAAMjC,QAAQ,IAAI;EACtD,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,MAAMI,GAAG,GAAG,UAAU,GAAG0B,OAAO;IAChC,MAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUX,KAAK,EAAE;QAChC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAIO,QAAQ,CAACQ,EAAE,EAAE;MACfhB,QAAQ,CAACmB,SAAS,CAAC,CAAC,CAAC;MACrBnB,QAAQ,CAACuB,aAAa,CAAC,IAAI,CAAC,CAAC;MAC7BvB,QAAQ,CAACJ,QAAQ,CAAC,0BAA0B,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACjE;EACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;IACdjB,QAAQ,CAACJ,QAAQ,CAACqB,KAAK,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}