{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kuliah\\\\Semester 6\\\\Topik Khusus\\\\MovieStore\\\\client\\\\src\\\\routers\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nconst ProtectedRoute = ({\n  layout: Layout,\n  component: Component,\n  isAuthenticated,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }))) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/',\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}));\nProtectedRoute.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\nProtectedRoute.defaultProps = {\n  isAuthenticated: false\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authState.isAuthenticated\n});\nexport default connect(mapStateToProps)(ProtectedRoute);","map":{"version":3,"names":["React","Route","Redirect","PropTypes","connect","ProtectedRoute","layout","Layout","component","Component","isAuthenticated","rest","createElement","Object","assign","render","props","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","pathname","state","from","location","propTypes","bool","defaultProps","mapStateToProps","authState"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/routers/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({\r\n  layout: Layout,\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated ? (\r\n        <Layout>\r\n          <Component {...props} />\r\n        </Layout>\r\n      ) : (\r\n        <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nProtectedRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\nProtectedRoute.defaultProps = {\r\n  isAuthenticated: false\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.authState.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps)(ProtectedRoute);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AAErC,MAAMC,cAAc,GAAGA,CAAC;EACtBC,MAAM,EAAEC,MAAM;EACdC,SAAS,EAAEC,SAAS;EACpBC,eAAe;EACf,GAAGC;AACL,CAAC,kBACCX,KAAA,CAAAY,aAAA,CAACX,KAAK,EAAAY,MAAA,CAAAC,MAAA,KACAH,IAAI;EACRI,MAAM,EAAEC,KAAK,IACXN,eAAe,gBACbV,KAAA,CAAAY,aAAA,CAACL,MAAM;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACLtB,KAAA,CAAAY,aAAA,CAACH,SAAS,EAAAI,MAAA,CAAAC,MAAA,KAAKE,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CACjB,CAAC,gBAETtB,KAAA,CAAAY,aAAA,CAACV,QAAQ;IAACqB,EAAE,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,KAAK,EAAE;QAAEC,IAAI,EAAEV,KAAK,CAACW;MAAS;IAAE,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAEtE;EAAAL,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,EACF,CACF;AAEDjB,cAAc,CAACuB,SAAS,GAAG;EACzBlB,eAAe,EAAEP,SAAS,CAAC0B;AAC7B,CAAC;AACDxB,cAAc,CAACyB,YAAY,GAAG;EAC5BpB,eAAe,EAAE;AACnB,CAAC;AACD,MAAMqB,eAAe,GAAGN,KAAK,KAAK;EAChCf,eAAe,EAAEe,KAAK,CAACO,SAAS,CAACtB;AACnC,CAAC,CAAC;AACF,eAAeN,OAAO,CAAC2B,eAAe,CAAC,CAAC1B,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}