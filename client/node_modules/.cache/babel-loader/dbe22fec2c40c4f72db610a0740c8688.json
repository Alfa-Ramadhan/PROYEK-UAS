{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport setRef from '../utils/setRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\nvar ClickAwayListener = React.forwardRef(function ClickAwayListener(props, ref) {\n  var children = props.children,\n    _props$mouseEvent = props.mouseEvent,\n    mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n    _props$touchEvent = props.touchEvent,\n    touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent,\n    onClickAway = props.onClickAway;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var mountedRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  var handleNodeRef = useForkRef(nodeRef, ref); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    setRef(handleNodeRef, ReactDOM.findDOMNode(instance));\n  }, [handleNodeRef]);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var handleClickAway = useEventCallback(function (event) {\n    // Ignore events that have been `event.preventDefault()` marked.\n    if (event.defaultPrevented) {\n      return;\n    } // IE 11 support, which trigger the handleClickAway even after the unbind\n\n    if (!mountedRef.current) {\n      return;\n    } // Do not act if user performed touchmove\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    } // The child might render null.\n\n    if (!nodeRef.current) {\n      return;\n    } // Multi window support\n\n    var doc = ownerDocument(nodeRef.current);\n    if (doc.documentElement && doc.documentElement.contains(event.target) && !nodeRef.current.contains(event.target)) {\n      onClickAway(event);\n    }\n  });\n  var handleTouchMove = React.useCallback(function () {\n    movedRef.current = true;\n  }, []);\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      document.addEventListener(mappedTouchEvent, handleClickAway);\n      document.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        document.removeEventListener(mappedTouchEvent, handleClickAway);\n        document.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, handleTouchMove, touchEvent]);\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      document.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        document.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return React.createElement(React.Fragment, null, React.cloneElement(children, {\n    ref: handleRef\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchStart', 'onTouchEnd', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport default ClickAwayListener;","map":{"version":3,"names":["React","ReactDOM","PropTypes","ownerDocument","useForkRef","setRef","useEventCallback","elementAcceptingRef","exactProp","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","forwardRef","props","ref","children","_props$mouseEvent","mouseEvent","_props$touchEvent","touchEvent","onClickAway","movedRef","useRef","nodeRef","mountedRef","useEffect","current","handleNodeRef","handleOwnRef","useCallback","instance","findDOMNode","handleRef","handleClickAway","event","defaultPrevented","doc","documentElement","contains","target","handleTouchMove","mappedTouchEvent","document","addEventListener","removeEventListener","undefined","mappedMouseEvent","createElement","Fragment","cloneElement","process","env","NODE_ENV","propTypes","isRequired","oneOf","func"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport setRef from '../utils/setRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nvar ClickAwayListener = React.forwardRef(function ClickAwayListener(props, ref) {\n  var children = props.children,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent,\n      onClickAway = props.onClickAway;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var mountedRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  var handleNodeRef = useForkRef(nodeRef, ref); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    setRef(handleNodeRef, ReactDOM.findDOMNode(instance));\n  }, [handleNodeRef]);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var handleClickAway = useEventCallback(function (event) {\n    // Ignore events that have been `event.preventDefault()` marked.\n    if (event.defaultPrevented) {\n      return;\n    } // IE 11 support, which trigger the handleClickAway even after the unbind\n\n\n    if (!mountedRef.current) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    } // The child might render null.\n\n\n    if (!nodeRef.current) {\n      return;\n    } // Multi window support\n\n\n    var doc = ownerDocument(nodeRef.current);\n\n    if (doc.documentElement && doc.documentElement.contains(event.target) && !nodeRef.current.contains(event.target)) {\n      onClickAway(event);\n    }\n  });\n  var handleTouchMove = React.useCallback(function () {\n    movedRef.current = true;\n  }, []);\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      document.addEventListener(mappedTouchEvent, handleClickAway);\n      document.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        document.removeEventListener(mappedTouchEvent, handleClickAway);\n        document.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, handleTouchMove, touchEvent]);\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      document.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        document.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return React.createElement(React.Fragment, null, React.cloneElement(children, {\n    ref: handleRef\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchStart', 'onTouchEnd', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}