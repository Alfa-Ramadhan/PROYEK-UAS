{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      backgroundColor: theme.palette.action.hover,\n      height: '1.2em'\n    },\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: '0.8em',\n      marginBottom: '0.8em',\n      borderRadius: theme.shape.borderRadius\n    },\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n    /* Styles applied to the root element if `disabledAnimate={false}`. */\n    animate: {\n      animation: '$animate 1.5s ease-in-out infinite'\n    },\n    '@keyframes animate': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    }\n  };\n};\nvar Skeleton = React.forwardRef(function Skeleton(props, ref) {\n  var classes = props.classes,\n    className = props.className,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? 'div' : _props$component,\n    _props$disableAnimate = props.disableAnimate,\n    disableAnimate = _props$disableAnimate === void 0 ? false : _props$disableAnimate,\n    height = props.height,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'text' : _props$variant,\n    width = props.width,\n    other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableAnimate\", \"height\", \"variant\", \"width\"]);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, !disableAnimate && classes.animate)\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true` the animation effect is disabled.\n   */\n  disableAnimate: PropTypes.bool,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","clsx","PropTypes","withStyles","styles","theme","root","display","backgroundColor","palette","action","hover","height","text","marginTop","marginBottom","borderRadius","shape","rect","circle","animate","animation","opacity","Skeleton","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$disableAnimate","disableAnimate","_props$variant","variant","width","other","createElement","style","process","env","NODE_ENV","propTypes","object","isRequired","string","elementType","bool","oneOfType","number","oneOf","name"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      backgroundColor: theme.palette.action.hover,\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: '0.8em',\n      marginBottom: '0.8em',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `disabledAnimate={false}`. */\n    animate: {\n      animation: '$animate 1.5s ease-in-out infinite'\n    },\n    '@keyframes animate': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    }\n  };\n};\nvar Skeleton = React.forwardRef(function Skeleton(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableAnimate = props.disableAnimate,\n      disableAnimate = _props$disableAnimate === void 0 ? false : _props$disableAnimate,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableAnimate\", \"height\", \"variant\", \"width\"]);\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, !disableAnimate && classes.animate)\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true` the animation effect is disabled.\n   */\n  disableAnimate: PropTypes.bool,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}