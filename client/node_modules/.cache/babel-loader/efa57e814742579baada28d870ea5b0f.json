{"ast":null,"code":"import { GET_USERS, ADD_USER, UPDATE_USER, DELETE_USER, TOGGLE_USER_DIALOG, SELECT_USER, SELECT_ALL_USERS } from '../types';\nconst initialState = {\n  users: [],\n  selectedUsers: [],\n  openDialog: false\n};\nconst toggleUserDialog = state => ({\n  ...state,\n  openDialog: !state.openDialog\n});\nconst selectUser = (state, payload) => {\n  const {\n    selectedUsers\n  } = state;\n  const selectedIndex = selectedUsers.indexOf(payload);\n  let newSelected = [];\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selectedUsers, payload);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selectedUsers.slice(1));\n  } else if (selectedIndex === selectedUsers.length - 1) {\n    newSelected = newSelected.concat(selectedUsers.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(selectedUsers.slice(0, selectedIndex), selectedUsers.slice(selectedIndex + 1));\n  }\n  return {\n    ...state,\n    selectedUsers: newSelected\n  };\n};\nconst selectAllUsers = state => ({\n  ...state,\n  selectedUsers: !state.selectedUsers.length ? state.users.map(user => user._id) : []\n});\nconst getUsers = (state, payload) => ({\n  ...state,\n  users: payload\n});\nconst addUser = (state, payload) => ({\n  ...state,\n  users: [...state.users, payload]\n});\nconst updateUser = (state, payload) => ({\n  ...state,\n  users: [...state.users.filter(user => user._id !== payload._id), payload]\n});\nconst deleteUser = (state, payload) => ({\n  ...state,\n  users: state.users.filter(user => user._id !== payload),\n  selectedUsers: state.selectedUsers.filter(element => element !== payload)\n});\nexport default (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_USERS:\n      return getUsers(state, payload);\n    case TOGGLE_USER_DIALOG:\n      return toggleUserDialog(state);\n    case SELECT_USER:\n      return selectUser(state, payload);\n    case SELECT_ALL_USERS:\n      return selectAllUsers(state);\n    case ADD_USER:\n      return addUser(state, payload);\n    case UPDATE_USER:\n      return updateUser(state, payload);\n    case DELETE_USER:\n      return deleteUser(state, payload);\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["GET_USERS","ADD_USER","UPDATE_USER","DELETE_USER","TOGGLE_USER_DIALOG","SELECT_USER","SELECT_ALL_USERS","initialState","users","selectedUsers","openDialog","toggleUserDialog","state","selectUser","payload","selectedIndex","indexOf","newSelected","concat","slice","length","selectAllUsers","map","user","_id","getUsers","addUser","updateUser","filter","deleteUser","element","action","type"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/store/reducers/users.js"],"sourcesContent":["import {\r\n  GET_USERS,\r\n  ADD_USER,\r\n  UPDATE_USER,\r\n  DELETE_USER,\r\n  TOGGLE_USER_DIALOG,\r\n  SELECT_USER,\r\n  SELECT_ALL_USERS\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  users: [],\r\n  selectedUsers: [],\r\n  openDialog: false\r\n};\r\n\r\nconst toggleUserDialog = state => ({\r\n  ...state,\r\n  openDialog: !state.openDialog\r\n});\r\n\r\nconst selectUser = (state, payload) => {\r\n  const { selectedUsers } = state;\r\n\r\n  const selectedIndex = selectedUsers.indexOf(payload);\r\n  let newSelected = [];\r\n\r\n  if (selectedIndex === -1) {\r\n    newSelected = newSelected.concat(selectedUsers, payload);\r\n  } else if (selectedIndex === 0) {\r\n    newSelected = newSelected.concat(selectedUsers.slice(1));\r\n  } else if (selectedIndex === selectedUsers.length - 1) {\r\n    newSelected = newSelected.concat(selectedUsers.slice(0, -1));\r\n  } else if (selectedIndex > 0) {\r\n    newSelected = newSelected.concat(\r\n      selectedUsers.slice(0, selectedIndex),\r\n      selectedUsers.slice(selectedIndex + 1)\r\n    );\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    selectedUsers: newSelected\r\n  };\r\n};\r\n\r\nconst selectAllUsers = state => ({\r\n  ...state,\r\n  selectedUsers: !state.selectedUsers.length\r\n    ? state.users.map(user => user._id)\r\n    : []\r\n});\r\n\r\nconst getUsers = (state, payload) => ({\r\n  ...state,\r\n  users: payload\r\n});\r\n\r\nconst addUser = (state, payload) => ({\r\n  ...state,\r\n  users: [...state.users, payload]\r\n});\r\n\r\nconst updateUser = (state, payload) => ({\r\n  ...state,\r\n  users: [...state.users.filter(user => user._id !== payload._id), payload]\r\n});\r\n\r\nconst deleteUser = (state, payload) => ({\r\n  ...state,\r\n  users: state.users.filter(user => user._id !== payload),\r\n  selectedUsers: state.selectedUsers.filter(element => element !== payload)\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return getUsers(state, payload);\r\n    case TOGGLE_USER_DIALOG:\r\n      return toggleUserDialog(state);\r\n    case SELECT_USER:\r\n      return selectUser(state, payload);\r\n    case SELECT_ALL_USERS:\r\n      return selectAllUsers(state);\r\n    case ADD_USER:\r\n      return addUser(state, payload);\r\n    case UPDATE_USER:\r\n      return updateUser(state, payload);\r\n    case DELETE_USER:\r\n      return deleteUser(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}