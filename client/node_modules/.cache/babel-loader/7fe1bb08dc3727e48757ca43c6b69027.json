{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kuliah\\\\Semester 6\\\\Topik Khusus\\\\MovieStore\\\\client\\\\src\\\\pages\\\\Public\\\\BookingPage\\\\BookingPage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Grid, Container, Box } from '@material-ui/core';\nimport { getMovie, getCinemasUserModeling, getCinema, getCinemas, getShowtimes, getReservations, getSuggestedReservationSeats, setSelectedSeats, setSelectedCinema, setSelectedDate, setSelectedTime, setInvitation, toggleLoginPopup, showInvitationForm, resetCheckout, setAlert, addReservation, setSuggestedSeats, setQRCode } from '../../../store/actions';\nimport { ResponsiveDialog } from '../../../components';\nimport LoginForm from '../Login/components/LoginForm';\nimport styles from './styles';\nimport MovieInfo from './components/MovieInfo/MovieInfo';\nimport BookingForm from './components/BookingForm/BookingForm';\nimport BookingSeats from './components/BookingSeats/BookingSeats';\nimport BookingCheckout from './components/BookingCheckout/BookingCheckout';\nimport BookingInvitation from './components/BookingInvitation/BookingInvitation';\nimport jsPDF from 'jspdf';\nclass BookingPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.didSetSuggestion = false;\n    this.jsPdfGenerator = () => {\n      const {\n        movie,\n        cinema,\n        selectedDate,\n        selectedTime,\n        QRCode\n      } = this.props;\n      const doc = new jsPDF();\n      doc.setFont('helvetica');\n      doc.setFontType('bold');\n      doc.setFontSize(22);\n      doc.text(movie.title, 20, 20);\n      doc.setFontSize(16);\n      doc.text(cinema.name, 20, 30);\n      doc.text(`Date: ${new Date(selectedDate).toLocaleDateString()} - Time: ${selectedTime}`, 20, 40);\n      doc.addImage(QRCode, 'JPEG', 15, 40, 160, 160);\n      doc.save(`${movie.title}-${cinema.name}.pdf`);\n    };\n    this.onSelectSeat = (row, seat) => {\n      const {\n        cinema,\n        setSelectedSeats\n      } = this.props;\n      const seats = (cinema === null || cinema === void 0 ? void 0 : cinema.seats) ? [...cinema.seats.map(r => [...r])] : [];\n      if (!seats[row] || seats[row][seat] === undefined) return;\n      if (seats[row][seat] === 1) return;\n      if (seats[row][seat] === 2) seats[row][seat] = 0;else seats[row][seat] = 2;\n      setSelectedSeats([row, seat]);\n    };\n    this.onGetReservedSeats = () => {\n      const {\n        reservations,\n        cinema,\n        selectedDate,\n        selectedTime\n      } = this.props;\n      if (!(cinema === null || cinema === void 0 ? void 0 : cinema.seats)) return [];\n      const newSeats = cinema.seats.map(row => [...row]);\n      const filteredReservations = reservations.filter(reservation => new Date(reservation.date).toLocaleDateString() === new Date(selectedDate).toLocaleDateString() && reservation.startAt === selectedTime);\n      filteredReservations.flatMap(reservation => reservation.seats).forEach(([row, seat]) => {\n        if (newSeats[row]) newSeats[row][seat] = 1;\n      });\n      return newSeats;\n    };\n    this.onGetSuggestedSeats = (seats, suggestedSeats) => {\n      const {\n        numberOfTickets,\n        positions\n      } = suggestedSeats;\n      const positionsArray = Object.entries(positions).sort((a, b) => b[1] - a[1]);\n      if (positionsArray.every(position => position[1] === 0)) return;\n      const step = Math.round(seats.length / 3);\n      for (let [zone] of positionsArray) {\n        let indexArr = zone === 'front' ? [0, step] : zone === 'center' ? [step, step * 2] : [step * 2, seats.length];\n        const suggested = this.checkSeats(indexArr, seats, numberOfTickets);\n        if (suggested) {\n          this.getSeat(suggested, seats, numberOfTickets);\n          break;\n        }\n      }\n    };\n    this.checkSeats = (indexArr, seats, numberOfTickets) => {\n      for (let i = indexArr[0]; i < indexArr[1]; i++) {\n        for (let j = 0; j <= seats[i].length - numberOfTickets; j++) {\n          if (seats[i].slice(j, j + numberOfTickets).every(seat => !seat)) {\n            return [i, j];\n          }\n        }\n      }\n      return null;\n    };\n    this.getSeat = (suggested, seats, numberOfTickets) => {\n      const {\n        setSuggestedSeats\n      } = this.props;\n      const seatsToSet = [];\n      for (let i = suggested[1]; i < suggested[1] + numberOfTickets; i++) {\n        seatsToSet.push([suggested[0], i]);\n      }\n      setSuggestedSeats(seatsToSet);\n    };\n    this.onChangeCinema = event => this.props.setSelectedCinema(event.target.value);\n    this.onChangeDate = date => this.props.setSelectedDate(date);\n    this.onChangeTime = event => this.props.setSelectedTime(event.target.value);\n  }\n  componentDidMount() {\n    const {\n      user,\n      match,\n      getMovie,\n      getCinemas,\n      getCinemasUserModeling,\n      getShowtimes,\n      getReservations,\n      getSuggestedReservationSeats\n    } = this.props;\n    getMovie(match.params.id);\n    user ? getCinemasUserModeling(user.username) : getCinemas();\n    getShowtimes();\n    getReservations();\n    if (user) getSuggestedReservationSeats(user.username);\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      selectedCinema,\n      selectedDate,\n      getCinema\n    } = this.props;\n    if (selectedCinema && prevProps.selectedCinema !== selectedCinema || selectedCinema && prevProps.selectedDate !== selectedDate) {\n      getCinema(selectedCinema);\n    }\n  }\n  async checkout() {\n    const {\n      movie,\n      cinema,\n      selectedSeats,\n      selectedDate,\n      selectedTime,\n      getReservations,\n      isAuth,\n      user,\n      addReservation,\n      toggleLoginPopup,\n      showInvitationForm,\n      setQRCode\n    } = this.props;\n    if (selectedSeats.length === 0) return;\n    if (!isAuth) return toggleLoginPopup();\n    const response = await addReservation({\n      date: selectedDate,\n      startAt: selectedTime,\n      seats: this.bookSeats(),\n      ticketPrice: cinema.ticketPrice,\n      total: selectedSeats.length * cinema.ticketPrice,\n      movieId: movie._id,\n      cinemaId: cinema._id,\n      username: user.username,\n      phone: user.phone\n    });\n    if (response.status === 'success') {\n      const {\n        data\n      } = response;\n      setQRCode(data.QRCode);\n      getReservations();\n      showInvitationForm();\n    }\n  }\n  bookSeats() {\n    const {\n      cinema\n    } = this.props;\n    if (!(cinema === null || cinema === void 0 ? void 0 : cinema.seats)) return [];\n    return cinema.seats.flatMap((row, rowIndex) => row.map((seat, seatIndex) => seat === 2 ? [rowIndex, seatIndex] : null).filter(Boolean));\n  }\n  onFilterCinema() {\n    const {\n      cinemas,\n      showtimes,\n      selectedCinema,\n      selectedTime\n    } = this.props;\n    const initialReturn = {\n      uniqueCinemas: [],\n      uniqueTimes: []\n    };\n    if (!showtimes || !cinemas) return initialReturn;\n    const uniqueCinemasId = showtimes.filter(showtime => selectedTime ? showtime.startAt === selectedTime : true).map(showtime => showtime.cinemaId).filter((value, index, self) => self.indexOf(value) === index);\n    const uniqueCinemas = cinemas.filter(cinema => uniqueCinemasId.includes(cinema._id));\n    const uniqueTimes = showtimes.filter(showtime => selectedCinema ? selectedCinema === showtime.cinemaId : true).map(showtime => showtime.startAt).filter((value, index, self) => self.indexOf(value) === index).sort((a, b) => new Date(`1970/01/01 ${a}`) - new Date(`1970/01/01 ${b}`));\n    return {\n      ...initialReturn,\n      uniqueCinemas,\n      uniqueTimes\n    };\n  }\n  render() {\n    const {\n      classes,\n      user,\n      movie,\n      cinema,\n      showtimes,\n      selectedSeats,\n      selectedCinema,\n      selectedDate,\n      selectedTime,\n      showLoginPopup,\n      toggleLoginPopup,\n      showInvitation,\n      invitations,\n      setInvitation,\n      resetCheckout,\n      suggestedSeats,\n      suggestedSeat\n    } = this.props;\n    const {\n      uniqueCinemas,\n      uniqueTimes\n    } = this.onFilterCinema();\n    let seats = this.onGetReservedSeats();\n    if (suggestedSeats && selectedTime && !suggestedSeat.length) {\n      this.onGetSuggestedSeats(seats, suggestedSeats);\n    }\n    if (suggestedSeat.length && !this.didSetSuggestion) {\n      suggestedSeat.forEach(([row, seat]) => {\n        if (seats[row]) seats[row][seat] = 3;\n      });\n      this.didSetSuggestion = true;\n    }\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"xl\",\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MovieInfo, {\n      movie: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 9,\n      xs: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BookingForm, {\n      cinemas: uniqueCinemas,\n      times: uniqueTimes,\n      showtimes: showtimes,\n      selectedCinema: selectedCinema,\n      selectedDate: selectedDate,\n      selectedTime: selectedTime,\n      onChangeCinema: this.onChangeCinema,\n      onChangeDate: this.onChangeDate,\n      onChangeTime: this.onChangeTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }), showInvitation && !!selectedSeats.length && /*#__PURE__*/React.createElement(BookingInvitation, {\n      selectedSeats: selectedSeats,\n      sendInvitations: this.sendInvitations,\n      ignore: resetCheckout,\n      invitations: invitations,\n      onSetInvitation: setInvitation,\n      onDownloadPDF: this.jsPdfGenerator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }), cinema && selectedCinema && selectedTime && !showInvitation ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BookingSeats, {\n      seats: seats,\n      onSelectSeat: (indexRow, index) => this.onSelectSeat(indexRow, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BookingCheckout, {\n      user: user,\n      ticketPrice: cinema.ticketPrice,\n      seatsAvailable: cinema.seatsAvailable,\n      selectedSeats: selectedSeats.length,\n      onBookSeats: () => this.checkout(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      color: \"white\",\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 15\n      }\n    }, \"Seats not available.\"))), /*#__PURE__*/React.createElement(ResponsiveDialog, {\n      id: \"Edit-cinema\",\n      open: showLoginPopup,\n      handleClose: () => toggleLoginPopup(),\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoginForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    })));\n  }\n}\nBookingPage.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nconst mapStateToProps = ({\n  authState,\n  movieState,\n  cinemaState,\n  showtimeState,\n  reservationState,\n  checkoutState\n}, ownProps) => ({\n  isAuth: authState.isAuthenticated,\n  user: authState.user,\n  movie: movieState.selectedMovie,\n  cinema: cinemaState.selectedCinema,\n  cinemas: cinemaState.cinemas,\n  showtimes: showtimeState.showtimes.filter(showtime => showtime.movieId === ownProps.match.params.id),\n  reservations: reservationState.reservations,\n  selectedSeats: checkoutState.selectedSeats,\n  suggestedSeat: checkoutState.suggestedSeat,\n  selectedCinema: checkoutState.selectedCinema,\n  selectedDate: checkoutState.selectedDate,\n  selectedTime: checkoutState.selectedTime,\n  showLoginPopup: checkoutState.showLoginPopup,\n  showInvitation: checkoutState.showInvitation,\n  invitations: checkoutState.invitations,\n  QRCode: checkoutState.QRCode,\n  suggestedSeats: reservationState.suggestedSeats\n});\nconst mapDispatchToProps = {\n  getMovie,\n  getCinema,\n  getCinemasUserModeling,\n  getCinemas,\n  getShowtimes,\n  getReservations,\n  getSuggestedReservationSeats,\n  addReservation,\n  setSelectedSeats,\n  setSuggestedSeats,\n  setSelectedCinema,\n  setSelectedDate,\n  setSelectedTime,\n  setInvitation,\n  toggleLoginPopup,\n  showInvitationForm,\n  resetCheckout,\n  setAlert,\n  setQRCode\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(BookingPage));","map":{"version":3,"names":["React","Component","PropTypes","connect","withStyles","Grid","Container","Box","getMovie","getCinemasUserModeling","getCinema","getCinemas","getShowtimes","getReservations","getSuggestedReservationSeats","setSelectedSeats","setSelectedCinema","setSelectedDate","setSelectedTime","setInvitation","toggleLoginPopup","showInvitationForm","resetCheckout","setAlert","addReservation","setSuggestedSeats","setQRCode","ResponsiveDialog","LoginForm","styles","MovieInfo","BookingForm","BookingSeats","BookingCheckout","BookingInvitation","jsPDF","BookingPage","constructor","args","didSetSuggestion","jsPdfGenerator","movie","cinema","selectedDate","selectedTime","QRCode","props","doc","setFont","setFontType","setFontSize","text","title","name","Date","toLocaleDateString","addImage","save","onSelectSeat","row","seat","seats","map","r","undefined","onGetReservedSeats","reservations","newSeats","filteredReservations","filter","reservation","date","startAt","flatMap","forEach","onGetSuggestedSeats","suggestedSeats","numberOfTickets","positions","positionsArray","Object","entries","sort","a","b","every","position","step","Math","round","length","zone","indexArr","suggested","checkSeats","getSeat","i","j","slice","seatsToSet","push","onChangeCinema","event","target","value","onChangeDate","onChangeTime","componentDidMount","user","match","params","id","username","componentDidUpdate","prevProps","selectedCinema","checkout","selectedSeats","isAuth","response","bookSeats","ticketPrice","total","movieId","_id","cinemaId","phone","status","data","rowIndex","seatIndex","Boolean","onFilterCinema","cinemas","showtimes","initialReturn","uniqueCinemas","uniqueTimes","uniqueCinemasId","showtime","index","self","indexOf","includes","render","classes","showLoginPopup","showInvitation","invitations","suggestedSeat","createElement","maxWidth","className","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","spacing","style","height","item","lg","xs","md","times","sendInvitations","ignore","onSetInvitation","onDownloadPDF","Fragment","indexRow","seatsAvailable","onBookSeats","textAlign","color","mt","open","handleClose","propTypes","string","object","isRequired","history","mapStateToProps","authState","movieState","cinemaState","showtimeState","reservationState","checkoutState","ownProps","isAuthenticated","selectedMovie","mapDispatchToProps"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/pages/Public/BookingPage/BookingPage.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Grid, Container, Box } from '@material-ui/core';\r\nimport {\r\n  getMovie,\r\n  getCinemasUserModeling,\r\n  getCinema,\r\n  getCinemas,\r\n  getShowtimes,\r\n  getReservations,\r\n  getSuggestedReservationSeats,\r\n  setSelectedSeats,\r\n  setSelectedCinema,\r\n  setSelectedDate,\r\n  setSelectedTime,\r\n  setInvitation,\r\n  toggleLoginPopup,\r\n  showInvitationForm,\r\n  resetCheckout,\r\n  setAlert,\r\n  addReservation,\r\n  setSuggestedSeats,\r\n  setQRCode\r\n} from '../../../store/actions';\r\nimport { ResponsiveDialog } from '../../../components';\r\nimport LoginForm from '../Login/components/LoginForm';\r\nimport styles from './styles';\r\nimport MovieInfo from './components/MovieInfo/MovieInfo';\r\nimport BookingForm from './components/BookingForm/BookingForm';\r\nimport BookingSeats from './components/BookingSeats/BookingSeats';\r\nimport BookingCheckout from './components/BookingCheckout/BookingCheckout';\r\nimport BookingInvitation from './components/BookingInvitation/BookingInvitation';\r\nimport jsPDF from 'jspdf';\r\n\r\nclass BookingPage extends Component {\r\n  didSetSuggestion = false;\r\n\r\n  componentDidMount() {\r\n    const {\r\n      user,\r\n      match,\r\n      getMovie,\r\n      getCinemas,\r\n      getCinemasUserModeling,\r\n      getShowtimes,\r\n      getReservations,\r\n      getSuggestedReservationSeats\r\n    } = this.props;\r\n    getMovie(match.params.id);\r\n    user ? getCinemasUserModeling(user.username) : getCinemas();\r\n    getShowtimes();\r\n    getReservations();\r\n    if (user) getSuggestedReservationSeats(user.username);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { selectedCinema, selectedDate, getCinema } = this.props;\r\n    if (\r\n      (selectedCinema && prevProps.selectedCinema !== selectedCinema) ||\r\n      (selectedCinema && prevProps.selectedDate !== selectedDate)\r\n    ) {\r\n      getCinema(selectedCinema);\r\n    }\r\n  }\r\n\r\n  jsPdfGenerator = () => {\r\n    const { movie, cinema, selectedDate, selectedTime, QRCode } = this.props;\r\n    const doc = new jsPDF();\r\n    doc.setFont('helvetica');\r\n    doc.setFontType('bold');\r\n    doc.setFontSize(22);\r\n    doc.text(movie.title, 20, 20);\r\n    doc.setFontSize(16);\r\n    doc.text(cinema.name, 20, 30);\r\n    doc.text(`Date: ${new Date(selectedDate).toLocaleDateString()} - Time: ${selectedTime}`, 20, 40);\r\n    doc.addImage(QRCode, 'JPEG', 15, 40, 160, 160);\r\n    doc.save(`${movie.title}-${cinema.name}.pdf`);\r\n  };\r\n\r\n  onSelectSeat = (row, seat) => {\r\n    const { cinema, setSelectedSeats } = this.props;\r\n    const seats = cinema?.seats ? [...cinema.seats.map(r => [...r])] : [];\r\n    if (!seats[row] || seats[row][seat] === undefined) return;\r\n\r\n    if (seats[row][seat] === 1) return;\r\n    if (seats[row][seat] === 2) seats[row][seat] = 0;\r\n    else seats[row][seat] = 2;\r\n\r\n    setSelectedSeats([row, seat]);\r\n  };\r\n\r\n  async checkout() {\r\n    const {\r\n      movie,\r\n      cinema,\r\n      selectedSeats,\r\n      selectedDate,\r\n      selectedTime,\r\n      getReservations,\r\n      isAuth,\r\n      user,\r\n      addReservation,\r\n      toggleLoginPopup,\r\n      showInvitationForm,\r\n      setQRCode\r\n    } = this.props;\r\n\r\n    if (selectedSeats.length === 0) return;\r\n    if (!isAuth) return toggleLoginPopup();\r\n\r\n    const response = await addReservation({\r\n      date: selectedDate,\r\n      startAt: selectedTime,\r\n      seats: this.bookSeats(),\r\n      ticketPrice: cinema.ticketPrice,\r\n      total: selectedSeats.length * cinema.ticketPrice,\r\n      movieId: movie._id,\r\n      cinemaId: cinema._id,\r\n      username: user.username,\r\n      phone: user.phone\r\n    });\r\n\r\n    if (response.status === 'success') {\r\n      const { data } = response;\r\n      setQRCode(data.QRCode);\r\n      getReservations();\r\n      showInvitationForm();\r\n    }\r\n  }\r\n\r\n  bookSeats() {\r\n    const { cinema } = this.props;\r\n    if (!cinema?.seats) return [];\r\n\r\n    return cinema.seats\r\n      .flatMap((row, rowIndex) =>\r\n        row.map((seat, seatIndex) => (seat === 2 ? [rowIndex, seatIndex] : null)).filter(Boolean)\r\n      );\r\n  }\r\n\r\n  onFilterCinema() {\r\n    const { cinemas, showtimes, selectedCinema, selectedTime } = this.props;\r\n    const initialReturn = { uniqueCinemas: [], uniqueTimes: [] };\r\n    if (!showtimes || !cinemas) return initialReturn;\r\n\r\n    const uniqueCinemasId = showtimes\r\n      .filter(showtime => (selectedTime ? showtime.startAt === selectedTime : true))\r\n      .map(showtime => showtime.cinemaId)\r\n      .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n    const uniqueCinemas = cinemas.filter(cinema => uniqueCinemasId.includes(cinema._id));\r\n\r\n    const uniqueTimes = showtimes\r\n      .filter(showtime => (selectedCinema ? selectedCinema === showtime.cinemaId : true))\r\n      .map(showtime => showtime.startAt)\r\n      .filter((value, index, self) => self.indexOf(value) === index)\r\n      .sort((a, b) => new Date(`1970/01/01 ${a}`) - new Date(`1970/01/01 ${b}`));\r\n\r\n    return { ...initialReturn, uniqueCinemas, uniqueTimes };\r\n  }\r\n\r\n  onGetReservedSeats = () => {\r\n    const { reservations, cinema, selectedDate, selectedTime } = this.props;\r\n    if (!cinema?.seats) return [];\r\n\r\n    const newSeats = cinema.seats.map(row => [...row]);\r\n    const filteredReservations = reservations.filter(\r\n      reservation =>\r\n        new Date(reservation.date).toLocaleDateString() ===\r\n          new Date(selectedDate).toLocaleDateString() &&\r\n        reservation.startAt === selectedTime\r\n    );\r\n\r\n    filteredReservations\r\n      .flatMap(reservation => reservation.seats)\r\n      .forEach(([row, seat]) => {\r\n        if (newSeats[row]) newSeats[row][seat] = 1;\r\n      });\r\n\r\n    return newSeats;\r\n  };\r\n\r\n  onGetSuggestedSeats = (seats, suggestedSeats) => {\r\n    const { numberOfTickets, positions } = suggestedSeats;\r\n    const positionsArray = Object.entries(positions).sort((a, b) => b[1] - a[1]);\r\n\r\n    if (positionsArray.every(position => position[1] === 0)) return;\r\n\r\n    const step = Math.round(seats.length / 3);\r\n    for (let [zone] of positionsArray) {\r\n      let indexArr =\r\n        zone === 'front' ? [0, step] : zone === 'center' ? [step, step * 2] : [step * 2, seats.length];\r\n      const suggested = this.checkSeats(indexArr, seats, numberOfTickets);\r\n      if (suggested) {\r\n        this.getSeat(suggested, seats, numberOfTickets);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  checkSeats = (indexArr, seats, numberOfTickets) => {\r\n    for (let i = indexArr[0]; i < indexArr[1]; i++) {\r\n      for (let j = 0; j <= seats[i].length - numberOfTickets; j++) {\r\n        if (seats[i].slice(j, j + numberOfTickets).every(seat => !seat)) {\r\n          return [i, j];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  getSeat = (suggested, seats, numberOfTickets) => {\r\n    const { setSuggestedSeats } = this.props;\r\n    const seatsToSet = [];\r\n    for (let i = suggested[1]; i < suggested[1] + numberOfTickets; i++) {\r\n      seatsToSet.push([suggested[0], i]);\r\n    }\r\n    setSuggestedSeats(seatsToSet);\r\n  };\r\n\r\n  onChangeCinema = event => this.props.setSelectedCinema(event.target.value);\r\n  onChangeDate = date => this.props.setSelectedDate(date);\r\n  onChangeTime = event => this.props.setSelectedTime(event.target.value);\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      user,\r\n      movie,\r\n      cinema,\r\n      showtimes,\r\n      selectedSeats,\r\n      selectedCinema,\r\n      selectedDate,\r\n      selectedTime,\r\n      showLoginPopup,\r\n      toggleLoginPopup,\r\n      showInvitation,\r\n      invitations,\r\n      setInvitation,\r\n      resetCheckout,\r\n      suggestedSeats,\r\n      suggestedSeat\r\n    } = this.props;\r\n    const { uniqueCinemas, uniqueTimes } = this.onFilterCinema();\r\n    let seats = this.onGetReservedSeats();\r\n    if (suggestedSeats && selectedTime && !suggestedSeat.length) {\r\n      this.onGetSuggestedSeats(seats, suggestedSeats);\r\n    }\r\n    if (suggestedSeat.length && !this.didSetSuggestion) {\r\n      suggestedSeat.forEach(([row, seat]) => {\r\n        if (seats[row]) seats[row][seat] = 3;\r\n      });\r\n      this.didSetSuggestion = true;\r\n    }\r\n\r\n    return (\r\n      <Container maxWidth=\"xl\" className={classes.container}>\r\n        <Grid container spacing={2} style={{ height: '100%' }}>\r\n          <MovieInfo movie={movie} />\r\n          <Grid item lg={9} xs={12} md={12}>\r\n            <BookingForm\r\n              cinemas={uniqueCinemas}\r\n              times={uniqueTimes}\r\n              showtimes={showtimes}\r\n              selectedCinema={selectedCinema}\r\n              selectedDate={selectedDate}\r\n              selectedTime={selectedTime}\r\n              onChangeCinema={this.onChangeCinema}\r\n              onChangeDate={this.onChangeDate}\r\n              onChangeTime={this.onChangeTime}\r\n            />\r\n            {showInvitation && !!selectedSeats.length && (\r\n              <BookingInvitation\r\n                selectedSeats={selectedSeats}\r\n                sendInvitations={this.sendInvitations}\r\n                ignore={resetCheckout}\r\n                invitations={invitations}\r\n                onSetInvitation={setInvitation}\r\n                onDownloadPDF={this.jsPdfGenerator}\r\n              />\r\n            )}\r\n            {cinema && selectedCinema && selectedTime && !showInvitation ? (\r\n              <>\r\n                <BookingSeats\r\n                  seats={seats}\r\n                  onSelectSeat={(indexRow, index) => this.onSelectSeat(indexRow, index)}\r\n                />\r\n                <BookingCheckout\r\n                  user={user}\r\n                  ticketPrice={cinema.ticketPrice}\r\n                  seatsAvailable={cinema.seatsAvailable}\r\n                  selectedSeats={selectedSeats.length}\r\n                  onBookSeats={() => this.checkout()}\r\n                />\r\n              </>\r\n            ) : (\r\n              <Box textAlign=\"center\" color=\"white\" mt={2}>\r\n                Seats not available.\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <ResponsiveDialog\r\n          id=\"Edit-cinema\"\r\n          open={showLoginPopup}\r\n          handleClose={() => toggleLoginPopup()}\r\n          maxWidth=\"sm\"\r\n        >\r\n          <LoginForm />\r\n        </ResponsiveDialog>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nBookingPage.propTypes = {\r\n  className: PropTypes.string,\r\n  classes: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (\r\n  {\r\n    authState,\r\n    movieState,\r\n    cinemaState,\r\n    showtimeState,\r\n    reservationState,\r\n    checkoutState\r\n  },\r\n  ownProps\r\n) => ({\r\n  isAuth: authState.isAuthenticated,\r\n  user: authState.user,\r\n  movie: movieState.selectedMovie,\r\n  cinema: cinemaState.selectedCinema,\r\n  cinemas: cinemaState.cinemas,\r\n  showtimes: showtimeState.showtimes.filter(\r\n    showtime => showtime.movieId === ownProps.match.params.id\r\n  ),\r\n  reservations: reservationState.reservations,\r\n  selectedSeats: checkoutState.selectedSeats,\r\n  suggestedSeat: checkoutState.suggestedSeat,\r\n  selectedCinema: checkoutState.selectedCinema,\r\n  selectedDate: checkoutState.selectedDate,\r\n  selectedTime: checkoutState.selectedTime,\r\n  showLoginPopup: checkoutState.showLoginPopup,\r\n  showInvitation: checkoutState.showInvitation,\r\n  invitations: checkoutState.invitations,\r\n  QRCode: checkoutState.QRCode,\r\n  suggestedSeats: reservationState.suggestedSeats\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getMovie,\r\n  getCinema,\r\n  getCinemasUserModeling,\r\n  getCinemas,\r\n  getShowtimes,\r\n  getReservations,\r\n  getSuggestedReservationSeats,\r\n  addReservation,\r\n  setSelectedSeats,\r\n  setSuggestedSeats,\r\n  setSelectedCinema,\r\n  setSelectedDate,\r\n  setSelectedTime,\r\n  setInvitation,\r\n  toggleLoginPopup,\r\n  showInvitationForm,\r\n  resetCheckout,\r\n  setAlert,\r\n  setQRCode\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(BookingPage));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}