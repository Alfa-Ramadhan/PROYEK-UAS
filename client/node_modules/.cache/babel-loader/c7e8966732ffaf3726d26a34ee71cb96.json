{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles'; // This variable will be true once the server-side hydration is completed.\n\nvar hydrationCompleted = false;\nfunction useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: the `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  var _props$options = _extends({}, props, {}, options),\n    _props$options$defaul = _props$options.defaultMatches,\n    defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n    _props$options$noSsr = _props$options.noSsr,\n    noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n    _props$options$ssrMat = _props$options.ssrMatchMedia,\n    ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n  var _React$useState = React.useState(function () {\n      if ((hydrationCompleted || noSsr) && supportMatchMedia) {\n        return window.matchMedia(query).matches;\n      }\n      if (ssrMatchMedia) {\n        return ssrMatchMedia(query).matches;\n      } // Once the component is mounted, we rely on the\n      // event listeners to return the correct matches value.\n\n      return defaultMatches;\n    }),\n    match = _React$useState[0],\n    setMatch = _React$useState[1];\n  React.useEffect(function () {\n    var active = true;\n    hydrationCompleted = true;\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n    var queryList = window.matchMedia(query);\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, supportMatchMedia]);\n  return match;\n}\nexport function testReset() {\n  hydrationCompleted = false;\n}\nexport default useMediaQuery;","map":{"version":3,"names":["_extends","React","getThemeProps","useTheme","hydrationCompleted","useMediaQuery","queryInput","options","arguments","length","undefined","theme","props","name","process","env","NODE_ENV","console","error","join","query","replace","supportMatchMedia","window","matchMedia","_props$options","_props$options$defaul","defaultMatches","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","useState","matches","match","setMatch","useEffect","active","queryList","updateMatch","addListener","removeListener","testReset"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles'; // This variable will be true once the server-side hydration is completed.\n\nvar hydrationCompleted = false;\n\nfunction useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: the `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, {}, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if ((hydrationCompleted || noSsr) && supportMatchMedia) {\n      return window.matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n    hydrationCompleted = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = window.matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, supportMatchMedia]);\n  return match;\n}\n\nexport function testReset() {\n  hydrationCompleted = false;\n}\nexport default useMediaQuery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}