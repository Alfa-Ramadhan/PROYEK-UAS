{"ast":null,"code":"import { GET_RESERVATIONS, GET_RESERVATION_SUGGESTED_SEATS } from '../types';\nimport { setAlert } from './alert';\n\n// ✅ Ambil semua reservasi\nexport const getReservations = () => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/reservations';\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const reservations = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_RESERVATIONS,\n        payload: reservations\n      });\n    } else {\n      dispatch(setAlert(reservations.message || 'Gagal mengambil reservasi', 'error', 5000));\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message || 'Kesalahan sistem saat mengambil reservasi', 'error', 5000));\n  }\n};\n\n// ✅ Ambil saran kursi berdasarkan user\nexport const getSuggestedReservationSeats = username => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = `/reservations/usermodeling/${username}`;\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const reservationSeats = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: GET_RESERVATION_SUGGESTED_SEATS,\n        payload: reservationSeats\n      });\n    } else {\n      dispatch(setAlert(reservationSeats.message || 'Gagal mengambil saran kursi', 'error', 5000));\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message || 'Kesalahan sistem saat mengambil saran kursi', 'error', 5000));\n  }\n};\n\n// ✅ Tambah reservasi (booking)\nexport const addReservation = reservation => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = '/reservations';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reservation)\n    });\n    const resData = await response.json();\n    if (response.ok) {\n      const {\n        reservation,\n        QRCode\n      } = resData;\n      dispatch(setAlert('Reservasi berhasil dibuat', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Reservasi berhasil dibuat',\n        data: {\n          reservation,\n          QRCode\n        }\n      };\n    } else {\n      dispatch(setAlert(resData.message || 'Gagal membuat reservasi', 'error', 5000));\n      return {\n        status: 'error',\n        message: resData.message || 'Gagal membuat reservasi'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message || 'Terjadi kesalahan sistem', 'error', 5000));\n    return {\n      status: 'error',\n      message: error.message || 'Terjadi kesalahan sistem saat membuat reservasi'\n    };\n  }\n};\n\n// ✅ Perbarui reservasi\nexport const updateReservation = (reservation, id) => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = `/reservations/${id}`;\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reservation)\n    });\n    const resData = await response.json();\n    if (response.ok) {\n      dispatch(setAlert('Reservasi berhasil diperbarui', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Reservasi berhasil diperbarui'\n      };\n    } else {\n      dispatch(setAlert(resData.message || 'Gagal memperbarui reservasi', 'error', 5000));\n      return {\n        status: 'error',\n        message: resData.message || 'Gagal memperbarui reservasi'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message || 'Terjadi kesalahan sistem', 'error', 5000));\n    return {\n      status: 'error',\n      message: error.message || 'Terjadi kesalahan saat memperbarui reservasi'\n    };\n  }\n};\n\n// ✅ Hapus reservasi\nexport const removeReservation = id => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const url = `/reservations/${id}`;\n    const response = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const resData = await response.json();\n    if (response.ok) {\n      dispatch(setAlert('Reservasi berhasil dihapus', 'success', 5000));\n      return {\n        status: 'success',\n        message: 'Reservasi berhasil dihapus'\n      };\n    } else {\n      dispatch(setAlert(resData.message || 'Gagal menghapus reservasi', 'error', 5000));\n      return {\n        status: 'error',\n        message: resData.message || 'Gagal menghapus reservasi'\n      };\n    }\n  } catch (error) {\n    dispatch(setAlert(error.message || 'Terjadi kesalahan sistem', 'error', 5000));\n    return {\n      status: 'error',\n      message: error.message || 'Terjadi kesalahan saat menghapus reservasi'\n    };\n  }\n};","map":{"version":3,"names":["GET_RESERVATIONS","GET_RESERVATION_SUGGESTED_SEATS","setAlert","getReservations","dispatch","token","localStorage","getItem","url","response","fetch","method","headers","Authorization","reservations","json","ok","type","payload","message","error","getSuggestedReservationSeats","username","reservationSeats","addReservation","reservation","body","JSON","stringify","resData","QRCode","status","data","updateReservation","id","removeReservation"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/store/actions/reservations.js"],"sourcesContent":["import { GET_RESERVATIONS, GET_RESERVATION_SUGGESTED_SEATS } from '../types';\r\nimport { setAlert } from './alert';\r\n\r\n// ✅ Ambil semua reservasi\r\nexport const getReservations = () => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/reservations';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    const reservations = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: GET_RESERVATIONS, payload: reservations });\r\n    } else {\r\n      dispatch(setAlert(reservations.message || 'Gagal mengambil reservasi', 'error', 5000));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message || 'Kesalahan sistem saat mengambil reservasi', 'error', 5000));\r\n  }\r\n};\r\n\r\n// ✅ Ambil saran kursi berdasarkan user\r\nexport const getSuggestedReservationSeats = username => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = `/reservations/usermodeling/${username}`;\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    const reservationSeats = await response.json();\r\n    if (response.ok) {\r\n      dispatch({\r\n        type: GET_RESERVATION_SUGGESTED_SEATS,\r\n        payload: reservationSeats\r\n      });\r\n    } else {\r\n      dispatch(setAlert(reservationSeats.message || 'Gagal mengambil saran kursi', 'error', 5000));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message || 'Kesalahan sistem saat mengambil saran kursi', 'error', 5000));\r\n  }\r\n};\r\n\r\n// ✅ Tambah reservasi (booking)\r\nexport const addReservation = reservation => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = '/reservations';\r\n\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(reservation)\r\n    });\r\n\r\n    const resData = await response.json();\r\n\r\n    if (response.ok) {\r\n      const { reservation, QRCode } = resData;\r\n      dispatch(setAlert('Reservasi berhasil dibuat', 'success', 5000));\r\n      return {\r\n        status: 'success',\r\n        message: 'Reservasi berhasil dibuat',\r\n        data: { reservation, QRCode }\r\n      };\r\n    } else {\r\n      dispatch(setAlert(resData.message || 'Gagal membuat reservasi', 'error', 5000));\r\n      return {\r\n        status: 'error',\r\n        message: resData.message || 'Gagal membuat reservasi'\r\n      };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message || 'Terjadi kesalahan sistem', 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: error.message || 'Terjadi kesalahan sistem saat membuat reservasi'\r\n    };\r\n  }\r\n};\r\n\r\n// ✅ Perbarui reservasi\r\nexport const updateReservation = (reservation, id) => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = `/reservations/${id}`;\r\n    const response = await fetch(url, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(reservation)\r\n    });\r\n\r\n    const resData = await response.json();\r\n\r\n    if (response.ok) {\r\n      dispatch(setAlert('Reservasi berhasil diperbarui', 'success', 5000));\r\n      return { status: 'success', message: 'Reservasi berhasil diperbarui' };\r\n    } else {\r\n      dispatch(setAlert(resData.message || 'Gagal memperbarui reservasi', 'error', 5000));\r\n      return {\r\n        status: 'error',\r\n        message: resData.message || 'Gagal memperbarui reservasi'\r\n      };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message || 'Terjadi kesalahan sistem', 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: error.message || 'Terjadi kesalahan saat memperbarui reservasi'\r\n    };\r\n  }\r\n};\r\n\r\n// ✅ Hapus reservasi\r\nexport const removeReservation = id => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem('jwtToken');\r\n    const url = `/reservations/${id}`;\r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const resData = await response.json();\r\n\r\n    if (response.ok) {\r\n      dispatch(setAlert('Reservasi berhasil dihapus', 'success', 5000));\r\n      return { status: 'success', message: 'Reservasi berhasil dihapus' };\r\n    } else {\r\n      dispatch(setAlert(resData.message || 'Gagal menghapus reservasi', 'error', 5000));\r\n      return {\r\n        status: 'error',\r\n        message: resData.message || 'Gagal menghapus reservasi'\r\n      };\r\n    }\r\n  } catch (error) {\r\n    dispatch(setAlert(error.message || 'Terjadi kesalahan sistem', 'error', 5000));\r\n    return {\r\n      status: 'error',\r\n      message: error.message || 'Terjadi kesalahan saat menghapus reservasi'\r\n    };\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}