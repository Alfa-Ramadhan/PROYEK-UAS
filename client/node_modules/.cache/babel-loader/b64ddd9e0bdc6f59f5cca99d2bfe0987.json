{"ast":null,"code":"import { GET_MOVIES, SELECT_MOVIE, GET_SUGGESTIONS } from '../types';\nconst initialState = {\n  movies: [],\n  randomMovie: null,\n  latestMovies: [],\n  nowShowing: [],\n  comingSoon: [],\n  selectedMovie: null,\n  suggested: []\n};\n\n// Fungsi untuk mengelola data film yang didapat dari backend\nconst getMovies = (state, payload) => {\n  if (!Array.isArray(payload)) return state;\n  const now = new Date();\n  const latestMovies = [...payload].sort((a, b) => Date.parse(b.releaseDate) - Date.parse(a.releaseDate)).slice(0, 5);\n  const nowShowing = payload.filter(movie => new Date(movie.releaseDate) <= now && new Date(movie.endDate) >= now);\n  const comingSoon = payload.filter(movie => new Date(movie.releaseDate) > now);\n  const randomMovie = payload.length > 0 ? payload[Math.floor(Math.random() * payload.length)] : null;\n  return {\n    ...state,\n    movies: payload,\n    randomMovie,\n    latestMovies,\n    nowShowing,\n    comingSoon\n  };\n};\n\n// Fungsi untuk menyimpan film yang dipilih pengguna\nconst onSelectMovie = (state, payload) => ({\n  ...state,\n  selectedMovie: payload\n});\n\n// Fungsi untuk menyimpan hasil rekomendasi film\nconst getMovieSuggestions = (state, payload) => ({\n  ...state,\n  suggested: payload\n});\n\n// Reducer utama\nexport default (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_MOVIES:\n      return getMovies(state, payload);\n    case SELECT_MOVIE:\n      return onSelectMovie(state, payload);\n    case GET_SUGGESTIONS:\n      return getMovieSuggestions(state, payload);\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["GET_MOVIES","SELECT_MOVIE","GET_SUGGESTIONS","initialState","movies","randomMovie","latestMovies","nowShowing","comingSoon","selectedMovie","suggested","getMovies","state","payload","Array","isArray","now","Date","sort","a","b","parse","releaseDate","slice","filter","movie","endDate","length","Math","floor","random","onSelectMovie","getMovieSuggestions","action","type"],"sources":["C:/Kuliah/Semester 6/Topik Khusus/MovieStore/client/src/store/reducers/movies.js"],"sourcesContent":["import {\r\n  GET_MOVIES,\r\n  SELECT_MOVIE,\r\n  GET_SUGGESTIONS\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  randomMovie: null,\r\n  latestMovies: [],\r\n  nowShowing: [],\r\n  comingSoon: [],\r\n  selectedMovie: null,\r\n  suggested: []\r\n};\r\n\r\n// Fungsi untuk mengelola data film yang didapat dari backend\r\nconst getMovies = (state, payload) => {\r\n  if (!Array.isArray(payload)) return state;\r\n\r\n  const now = new Date();\r\n\r\n  const latestMovies = [...payload]\r\n    .sort((a, b) => Date.parse(b.releaseDate) - Date.parse(a.releaseDate))\r\n    .slice(0, 5);\r\n\r\n  const nowShowing = payload.filter(movie =>\r\n    new Date(movie.releaseDate) <= now && new Date(movie.endDate) >= now\r\n  );\r\n\r\n  const comingSoon = payload.filter(movie =>\r\n    new Date(movie.releaseDate) > now\r\n  );\r\n\r\n  const randomMovie = payload.length > 0\r\n    ? payload[Math.floor(Math.random() * payload.length)]\r\n    : null;\r\n\r\n  return {\r\n    ...state,\r\n    movies: payload,\r\n    randomMovie,\r\n    latestMovies,\r\n    nowShowing,\r\n    comingSoon\r\n  };\r\n};\r\n\r\n// Fungsi untuk menyimpan film yang dipilih pengguna\r\nconst onSelectMovie = (state, payload) => ({\r\n  ...state,\r\n  selectedMovie: payload\r\n});\r\n\r\n// Fungsi untuk menyimpan hasil rekomendasi film\r\nconst getMovieSuggestions = (state, payload) => ({\r\n  ...state,\r\n  suggested: payload\r\n});\r\n\r\n// Reducer utama\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_MOVIES:\r\n      return getMovies(state, payload);\r\n    case SELECT_MOVIE:\r\n      return onSelectMovie(state, payload);\r\n    case GET_SUGGESTIONS:\r\n      return getMovieSuggestions(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SACEA,UAAU,EACVC,YAAY,EACZC,eAAe,QACV,UAAU;AAEjB,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE,IAAI;EACjBC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE,EAAE;EACdC,aAAa,EAAE,IAAI;EACnBC,SAAS,EAAE;AACb,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;EACpC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE,OAAOD,KAAK;EAEzC,MAAMI,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EAEtB,MAAMX,YAAY,GAAG,CAAC,GAAGO,OAAO,CAAC,CAC9BK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKH,IAAI,CAACI,KAAK,CAACD,CAAC,CAACE,WAAW,CAAC,GAAGL,IAAI,CAACI,KAAK,CAACF,CAAC,CAACG,WAAW,CAAC,CAAC,CACrEC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAEd,MAAMhB,UAAU,GAAGM,OAAO,CAACW,MAAM,CAACC,KAAK,IACrC,IAAIR,IAAI,CAACQ,KAAK,CAACH,WAAW,CAAC,IAAIN,GAAG,IAAI,IAAIC,IAAI,CAACQ,KAAK,CAACC,OAAO,CAAC,IAAIV,GACnE,CAAC;EAED,MAAMR,UAAU,GAAGK,OAAO,CAACW,MAAM,CAACC,KAAK,IACrC,IAAIR,IAAI,CAACQ,KAAK,CAACH,WAAW,CAAC,GAAGN,GAChC,CAAC;EAED,MAAMX,WAAW,GAAGQ,OAAO,CAACc,MAAM,GAAG,CAAC,GAClCd,OAAO,CAACe,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGjB,OAAO,CAACc,MAAM,CAAC,CAAC,GACnD,IAAI;EAER,OAAO;IACL,GAAGf,KAAK;IACRR,MAAM,EAAES,OAAO;IACfR,WAAW;IACXC,YAAY;IACZC,UAAU;IACVC;EACF,CAAC;AACH,CAAC;;AAED;AACA,MAAMuB,aAAa,GAAGA,CAACnB,KAAK,EAAEC,OAAO,MAAM;EACzC,GAAGD,KAAK;EACRH,aAAa,EAAEI;AACjB,CAAC,CAAC;;AAEF;AACA,MAAMmB,mBAAmB,GAAGA,CAACpB,KAAK,EAAEC,OAAO,MAAM;EAC/C,GAAGD,KAAK;EACRF,SAAS,EAAEG;AACb,CAAC,CAAC;;AAEF;AACA,eAAe,CAACD,KAAK,GAAGT,YAAY,EAAE8B,MAAM,KAAK;EAC/C,MAAM;IAAEC,IAAI;IAAErB;EAAQ,CAAC,GAAGoB,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKlC,UAAU;MACb,OAAOW,SAAS,CAACC,KAAK,EAAEC,OAAO,CAAC;IAClC,KAAKZ,YAAY;MACf,OAAO8B,aAAa,CAACnB,KAAK,EAAEC,OAAO,CAAC;IACtC,KAAKX,eAAe;MAClB,OAAO8B,mBAAmB,CAACpB,KAAK,EAAEC,OAAO,CAAC;IAC5C;MACE,OAAOD,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}